

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Feb 11 22:01:55 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18LF46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1
    23                           	psect	text15,global,reloc=2,class=CODE,delta=1
    24                           	psect	text16,global,reloc=2,class=CODE,delta=1
    25                           	psect	text17,global,reloc=2,class=CODE,delta=1
    26                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    27                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    28                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    30  0000                     
    31                           ; Version 2.20
    32                           ; Generated 05/05/2020 GMT
    33                           ; 
    34                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC18LF46K22 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     
    66                           	psect	smallconst
    67  001000                     __psmallconst:
    68                           	callstack 0
    69  001000  00                 	db	0
    70  001001                     _hexpowers:
    71                           	callstack 0
    72  001001  0001               	dw	1
    73  001003  0010               	dw	16
    74  001005  0100               	dw	256
    75  001007  1000               	dw	4096
    76  001009                     __end_of_hexpowers:
    77                           	callstack 0
    78  0000                     _PMD1bits	set	3902
    79  0000                     _PMD2	set	3901
    80  0000                     _PMD1	set	3902
    81  0000                     _PMD0	set	3903
    82  0000                     _PMD0bits	set	3903
    83  0000                     _VREFCON0bits	set	3906
    84  0000                     _ANSELEbits	set	3900
    85  0000                     _ANSELDbits	set	3899
    86  0000                     _ANSELCbits	set	3898
    87  0000                     _ANSELBbits	set	3897
    88  0000                     _ANSELAbits	set	3896
    89  0000                     _SSP2BUF	set	3951
    90  0000                     _SSP2STATbits	set	3949
    91  0000                     _SSP2CON1bits	set	3948
    92  0000                     _ADCON0bits	set	4034
    93  0000                     _TRISEbits	set	3990
    94  0000                     _LATDbits	set	3980
    95  0000                     _TRISDbits	set	3989
    96  0000                     _TRISCbits	set	3988
    97  0000                     _LATCbits	set	3979
    98  0000                     _TRISBbits	set	3987
    99  0000                     _LATBbits	set	3978
   100  0000                     _LATAbits	set	3977
   101  0000                     _TRISAbits	set	3986
   102  0000                     _LATEbits	set	3981
   103  0000                     _OSCTUNEbits	set	3995
   104  0000                     _OSCCON2bits	set	4050
   105  0000                     _OSCCONbits	set	4051
   106  0000                     _SSP2IF	set	32039
   107  001009                     STR_3:
   108  001009  4C                 	db	76	;'L'
   109  00100A  6F                 	db	111	;'o'
   110  00100B  52                 	db	82	;'R'
   111  00100C  61                 	db	97	;'a'
   112  00100D  20                 	db	32
   113  00100E  6C                 	db	108	;'l'
   114  00100F  6F                 	db	111	;'o'
   115  001010  61                 	db	97	;'a'
   116  001011  64                 	db	100	;'d'
   117  001012  20                 	db	32
   118  001013  6F                 	db	111	;'o'
   119  001014  70                 	db	112	;'p'
   120  001015  74                 	db	116	;'t'
   121  001016  69                 	db	105	;'i'
   122  001017  6D                 	db	109	;'m'
   123  001018  61                 	db	97	;'a'
   124  001019  6C                 	db	108	;'l'
   125  00101A  20                 	db	32
   126  00101B  72                 	db	114	;'r'
   127  00101C  65                 	db	101	;'e'
   128  00101D  67                 	db	103	;'g'
   129  00101E  69                 	db	105	;'i'
   130  00101F  73                 	db	115	;'s'
   131  001020  74                 	db	116	;'t'
   132  001021  65                 	db	101	;'e'
   133  001022  72                 	db	114	;'r'
   134  001023  20                 	db	32
   135  001024  76                 	db	118	;'v'
   136  001025  61                 	db	97	;'a'
   137  001026  6C                 	db	108	;'l'
   138  001027  75                 	db	117	;'u'
   139  001028  65                 	db	101	;'e'
   140  001029  73                 	db	115	;'s'
   141  00102A  0D                 	db	13
   142  00102B  0A                 	db	10
   143  00102C  00                 	db	0
   144  00102D                     STR_4:
   145  00102D  4C                 	db	76	;'L'
   146  00102E  6F                 	db	111	;'o'
   147  00102F  52                 	db	82	;'R'
   148  001030  61                 	db	97	;'a'
   149  001031  20                 	db	32
   150  001032  73                 	db	115	;'s'
   151  001033  65                 	db	101	;'e'
   152  001034  74                 	db	116	;'t'
   153  001035  20                 	db	32
   154  001036  66                 	db	102	;'f'
   155  001037  72                 	db	114	;'r'
   156  001038  65                 	db	101	;'e'
   157  001039  71                 	db	113	;'q'
   158  00103A  75                 	db	117	;'u'
   159  00103B  65                 	db	101	;'e'
   160  00103C  6E                 	db	110	;'n'
   161  00103D  63                 	db	99	;'c'
   162  00103E  79                 	db	121	;'y'
   163  00103F  0D                 	db	13
   164  001040  0A                 	db	10
   165  001041  00                 	db	0
   166  001042                     STR_8:
   167  001042  30                 	db	48	;'0'
   168  001043  31                 	db	49	;'1'
   169  001044  32                 	db	50	;'2'
   170  001045  33                 	db	51	;'3'
   171  001046  34                 	db	52	;'4'
   172  001047  35                 	db	53	;'5'
   173  001048  36                 	db	54	;'6'
   174  001049  37                 	db	55	;'7'
   175  00104A  38                 	db	56	;'8'
   176  00104B  39                 	db	57	;'9'
   177  00104C  41                 	db	65	;'A'
   178  00104D  42                 	db	66	;'B'
   179  00104E  43                 	db	67	;'C'
   180  00104F  44                 	db	68	;'D'
   181  001050  45                 	db	69	;'E'
   182  001051  46                 	db	70	;'F'
   183  001052  00                 	db	0
   184  001053  54                 	db	84	;'T'
   185  001054  72                 	db	114	;'r'
   186  001055  61                 	db	97	;'a'
   187  001056  6E                 	db	110	;'n'
   188  001057  73                 	db	115	;'s'
   189  001058  6D                 	db	109	;'m'
   190  001059  69                 	db	105	;'i'
   191  00105A  74                 	db	116	;'t'
   192  00105B  74                 	db	116	;'t'
   193  00105C  69                 	db	105	;'i'
   194  00105D  6E                 	db	110	;'n'
   195  00105E  67                 	db	103	;'g'
   196  00105F  2E                 	db	46
   197  001060  0D                 	db	13
   198  001061  0A                 	db	10
   199  001062  00                 	db	0
   200  001063                     STR_2:
   201  001063  53                 	db	83	;'S'
   202  001064  65                 	db	101	;'e'
   203  001065  74                 	db	116	;'t'
   204  001066  20                 	db	32
   205  001067  4C                 	db	76	;'L'
   206  001068  6F                 	db	111	;'o'
   207  001069  52                 	db	82	;'R'
   208  00106A  61                 	db	97	;'a'
   209  00106B  20                 	db	32
   210  00106C  4D                 	db	77	;'M'
   211  00106D  6F                 	db	111	;'o'
   212  00106E  64                 	db	100	;'d'
   213  00106F  65                 	db	101	;'e'
   214  001070  0D                 	db	13
   215  001071  0A                 	db	10
   216  001072  00                 	db	0
   217  001073                     STR_1:
   218  001073  4C                 	db	76	;'L'
   219  001074  6F                 	db	111	;'o'
   220  001075  52                 	db	82	;'R'
   221  001076  61                 	db	97	;'a'
   222  001077  20                 	db	32
   223  001078  53                 	db	83	;'S'
   224  001079  74                 	db	116	;'t'
   225  00107A  61                 	db	97	;'a'
   226  00107B  72                 	db	114	;'r'
   227  00107C  74                 	db	116	;'t'
   228  00107D  0D                 	db	13
   229  00107E  0A                 	db	10
   230  00107F  00                 	db	0
   231  001080  52                 	db	82	;'R'
   232  001081  65                 	db	101	;'e'
   233  001082  67                 	db	103	;'g'
   234  001083  20                 	db	32
   235  001084  25                 	db	37
   236  001085  58                 	db	88	;'X'
   237  001086  3A                 	db	58	;':'
   238  001087  25                 	db	37
   239  001088  58                 	db	88	;'X'
   240  001089  0D                 	db	13
   241  00108A  0A                 	db	10
   242  00108B  00                 	db	0
   243  00108C  54                 	db	84	;'T'
   244  00108D  58                 	db	88	;'X'
   245  00108E  20                 	db	32
   246  00108F  4D                 	db	77	;'M'
   247  001090  6F                 	db	111	;'o'
   248  001091  64                 	db	100	;'d'
   249  001092  65                 	db	101	;'e'
   250  001093  0D                 	db	13
   251  001094  0A                 	db	10
   252  001095  00                 	db	0
   253  001096  00                 	db	0	; dummy byte at the end
   254  0000                     
   255                           ; #config settings
   256                           
   257                           	psect	cinit
   258  001C92                     __pcinit:
   259                           	callstack 0
   260  001C92                     start_initialization:
   261                           	callstack 0
   262  001C92                     __initialization:
   263                           	callstack 0
   264  001C92                     end_of_initialization:
   265                           	callstack 0
   266  001C92                     __end_of__initialization:
   267                           	callstack 0
   268  001C92  0E00               	movlw	low (__Lmediumconst shr (0+16))
   269  001C94  6EF8               	movwf	tblptru,c
   270  001C96  0100               	movlb	0
   271  001C98  EFB5  F00C         	goto	_main	;jump to C main() function
   272                           
   273                           	psect	cstackCOMRAM
   274  000001                     __pcstackCOMRAM:
   275                           	callstack 0
   276  000001                     ??_LoRaReset:
   277  000001                     ?___lwdiv:
   278                           	callstack 0
   279  000001                     ?___flmul:
   280                           	callstack 0
   281  000001                     SPI2WriteByte@data:
   282                           	callstack 0
   283  000001                     SPI2ReadByte@address:
   284                           	callstack 0
   285  000001                     ___lwdiv@dividend:
   286                           	callstack 0
   287  000001                     ___flmul@b:
   288                           	callstack 0
   289                           
   290                           ; 4 bytes @ 0x0
   291  000001                     	ds	1
   292  000002                     SPI2WriteByte@address:
   293                           	callstack 0
   294  000002                     SPI2ReadByte@dataByte:
   295                           	callstack 0
   296                           
   297                           ; 1 bytes @ 0x1
   298  000002                     	ds	1
   299  000003                     writeOpModeRegister@regValue:
   300                           	callstack 0
   301  000003                     ___lwdiv@divisor:
   302                           	callstack 0
   303                           
   304                           ; 2 bytes @ 0x2
   305  000003                     	ds	1
   306  000004                     setLoRaMode@regValue:
   307                           	callstack 0
   308  000004                     LoRaStandbyMode@regValue:
   309                           	callstack 0
   310  000004                     LoRaSleepMode@regValue:
   311                           	callstack 0
   312                           
   313                           ; 1 bytes @ 0x3
   314  000004                     	ds	1
   315  000005                     ??_LoRaOptimalLoad:
   316  000005                     ___lwdiv@quotient:
   317                           	callstack 0
   318  000005                     ___flmul@a:
   319                           	callstack 0
   320                           
   321                           ; 4 bytes @ 0x4
   322  000005                     	ds	1
   323  000006                     LoRaOptimalLoad@syncWord:
   324                           	callstack 0
   325                           
   326                           ; 1 bytes @ 0x5
   327  000006                     	ds	1
   328  000007                     ___lwdiv@counter:
   329                           	callstack 0
   330                           
   331                           ; 1 bytes @ 0x6
   332  000007                     	ds	1
   333  000008                     ?_printf:
   334                           	callstack 0
   335  000008                     printf@f:
   336                           	callstack 0
   337                           
   338                           ; 2 bytes @ 0x7
   339  000008                     	ds	1
   340  000009                     ??___flmul:
   341                           
   342                           ; 1 bytes @ 0x8
   343  000009                     	ds	4
   344  00000D                     ___flmul@sign:
   345                           	callstack 0
   346                           
   347                           ; 1 bytes @ 0xC
   348  00000D                     	ds	1
   349  00000E                     printf@ap:
   350                           	callstack 0
   351  00000E                     ___flmul@grs:
   352                           	callstack 0
   353                           
   354                           ; 4 bytes @ 0xD
   355  00000E                     	ds	2
   356  000010                     printf@idx:
   357                           	callstack 0
   358                           
   359                           ; 1 bytes @ 0xF
   360  000010                     	ds	1
   361  000011                     printf@val:
   362                           	callstack 0
   363                           
   364                           ; 2 bytes @ 0x10
   365  000011                     	ds	1
   366  000012                     ___flmul@aexp:
   367                           	callstack 0
   368                           
   369                           ; 1 bytes @ 0x11
   370  000012                     	ds	1
   371  000013                     printf@prec:
   372                           	callstack 0
   373  000013                     ___flmul@bexp:
   374                           	callstack 0
   375                           
   376                           ; 1 bytes @ 0x12
   377  000013                     	ds	1
   378  000014                     printf@c:
   379                           	callstack 0
   380  000014                     ___flmul@prod:
   381                           	callstack 0
   382                           
   383                           ; 4 bytes @ 0x13
   384  000014                     	ds	4
   385  000018                     ___flmul@temp:
   386                           	callstack 0
   387                           
   388                           ; 2 bytes @ 0x17
   389  000018                     	ds	2
   390  00001A                     ?___fltol:
   391                           	callstack 0
   392  00001A                     ___fltol@f1:
   393                           	callstack 0
   394                           
   395                           ; 4 bytes @ 0x19
   396  00001A                     	ds	4
   397  00001E                     ??___fltol:
   398                           
   399                           ; 1 bytes @ 0x1D
   400  00001E                     	ds	4
   401  000022                     ___fltol@sign1:
   402                           	callstack 0
   403                           
   404                           ; 1 bytes @ 0x21
   405  000022                     	ds	1
   406  000023                     ___fltol@exp1:
   407                           	callstack 0
   408                           
   409                           ; 1 bytes @ 0x22
   410  000023                     	ds	1
   411  000024                     LoRaSetFrequency@freqMHz:
   412                           	callstack 0
   413                           
   414                           ; 4 bytes @ 0x23
   415  000024                     	ds	4
   416  000028                     LoRaSetFrequency@msb:
   417                           	callstack 0
   418                           
   419                           ; 1 bytes @ 0x27
   420  000028                     	ds	1
   421  000029                     LoRaSetFrequency@mid:
   422                           	callstack 0
   423                           
   424                           ; 1 bytes @ 0x28
   425  000029                     	ds	1
   426  00002A                     LoRaSetFrequency@lsb:
   427                           	callstack 0
   428                           
   429                           ; 1 bytes @ 0x29
   430  00002A                     	ds	1
   431  00002B                     LoRaSetFrequency@intermediate:
   432                           	callstack 0
   433                           
   434                           ; 4 bytes @ 0x2A
   435  00002B                     	ds	4
   436  00002F                     LoRaStart@freq:
   437                           	callstack 0
   438                           
   439                           ; 4 bytes @ 0x2E
   440  00002F                     	ds	4
   441  000033                     LoRaStart@syncWord:
   442                           	callstack 0
   443                           
   444                           ; 1 bytes @ 0x32
   445  000033                     	ds	1
   446  000034                     ??_LoRaStart:
   447                           
   448                           ; 1 bytes @ 0x33
   449  000034                     	ds	1
   450  000035                     ??_main:
   451                           
   452                           ; 1 bytes @ 0x34
   453  000035                     	ds	2
   454                           
   455 ;;
   456 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   457 ;;
   458 ;; *************** function _main *****************
   459 ;; Defined at:
   460 ;;		line 35 in file "main.c"
   461 ;; Parameters:    Size  Location     Type
   462 ;;		None
   463 ;; Auto vars:     Size  Location     Type
   464 ;;		None
   465 ;; Return value:  Size  Location     Type
   466 ;;                  1    wreg      void 
   467 ;; Registers used:
   468 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   469 ;; Tracked objects:
   470 ;;		On entry : 0/0
   471 ;;		On exit  : 0/0
   472 ;;		Unchanged: 0/0
   473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   476 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   477 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   478 ;;Total ram usage:        2 bytes
   479 ;; Hardware stack levels required when called: 5
   480 ;; This function calls:
   481 ;;		_LoRaReset
   482 ;;		_LoRaSleepMode
   483 ;;		_LoRaStart
   484 ;;		_shutdown
   485 ;; This function is called by:
   486 ;;		Startup code after reset
   487 ;; This function uses a non-reentrant model
   488 ;;
   489                           
   490                           	psect	text0
   491  00196A                     __ptext0:
   492                           	callstack 0
   493  00196A                     _main:
   494                           	callstack 26
   495  00196A                     
   496                           ;main.c: 36: OSCCONbits.IRCF=0b111;
   497  00196A  0E70               	movlw	112
   498  00196C  12D3               	iorwf	211,f,c	;volatile
   499  00196E                     
   500                           ;main.c: 37: OSCCONbits.OSTS=0;
   501  00196E  96D3               	bcf	211,3,c	;volatile
   502  001970                     
   503                           ;main.c: 38: OSCCON2bits.PLLRDY=1;
   504  001970  8ED2               	bsf	210,7,c	;volatile
   505  001972                     
   506                           ;main.c: 39: OSCTUNEbits.PLLEN=1;
   507  001972  8C9B               	bsf	155,6,c	;volatile
   508  001974                     
   509                           ;main.c: 40: LoRaReset();
   510  001974  EC0D  F00E         	call	_LoRaReset	;wreg free
   511  001978                     
   512                           ;main.c: 41: LoRaStart(866.5, 0x55);
   513  001978  0E00               	movlw	0
   514  00197A  6E2F               	movwf	LoRaStart@freq^0,c
   515  00197C  0EA0               	movlw	160
   516  00197E  6E30               	movwf	(LoRaStart@freq+1)^0,c
   517  001980  0E58               	movlw	88
   518  001982  6E31               	movwf	(LoRaStart@freq+2)^0,c
   519  001984  0E44               	movlw	68
   520  001986  6E32               	movwf	(LoRaStart@freq+3)^0,c
   521  001988  0E55               	movlw	85
   522  00198A  6E33               	movwf	LoRaStart@syncWord^0,c
   523  00198C  EC09  F00D         	call	_LoRaStart	;wreg free
   524  001990                     
   525                           ;main.c: 42: _delay((unsigned long)((10)*(16000000/4000.0)));
   526  001990  0E34               	movlw	52
   527  001992  6E35               	movwf	??_main^0,c
   528  001994  0EF2               	movlw	242
   529  001996                     u797:
   530  001996  2EE8               	decfsz	wreg,f,c
   531  001998  D7FE               	bra	u797
   532  00199A  2E35               	decfsz	??_main^0,f,c
   533  00199C  D7FC               	bra	u797
   534  00199E                     
   535                           ;main.c: 43: LoRaSleepMode();
   536  00199E  EC38  F00E         	call	_LoRaSleepMode	;wreg free
   537  0019A2                     
   538                           ;main.c: 44: _delay((unsigned long)((10)*(16000000/4000.0)));
   539  0019A2  0E34               	movlw	52
   540  0019A4  6E35               	movwf	??_main^0,c
   541  0019A6  0EF2               	movlw	242
   542  0019A8                     u807:
   543  0019A8  2EE8               	decfsz	wreg,f,c
   544  0019AA  D7FE               	bra	u807
   545  0019AC  2E35               	decfsz	??_main^0,f,c
   546  0019AE  D7FC               	bra	u807
   547  0019B0                     
   548                           ;main.c: 45: shutdown();
   549  0019B0  EC44  F00C         	call	_shutdown	;wreg free
   550  0019B4                     l63:
   551  0019B4  0003               	sleep		;# 
   552  0019B6                     
   553                           ;main.c: 48: LATEbits.LE2=1;
   554  0019B6  848D               	bsf	141,2,c	;volatile
   555  0019B8                     
   556                           ;main.c: 49: _delay((unsigned long)((50)*(16000000/4000.0)));
   557  0019B8  0E02               	movlw	2
   558  0019BA  6E36               	movwf	(??_main+1)^0,c
   559  0019BC  0E04               	movlw	4
   560  0019BE  6E35               	movwf	??_main^0,c
   561  0019C0  0EBA               	movlw	186
   562  0019C2                     u817:
   563  0019C2  2EE8               	decfsz	wreg,f,c
   564  0019C4  D7FE               	bra	u817
   565  0019C6  2E35               	decfsz	??_main^0,f,c
   566  0019C8  D7FC               	bra	u817
   567  0019CA  2E36               	decfsz	(??_main+1)^0,f,c
   568  0019CC  D7FA               	bra	u817
   569  0019CE  D000               	nop2	
   570  0019D0                     
   571                           ;main.c: 50: LATEbits.LE1=1;
   572  0019D0  828D               	bsf	141,1,c	;volatile
   573  0019D2                     
   574                           ;main.c: 51: _delay((unsigned long)((50)*(16000000/4000.0)));
   575  0019D2  0E02               	movlw	2
   576  0019D4  6E36               	movwf	(??_main+1)^0,c
   577  0019D6  0E04               	movlw	4
   578  0019D8  6E35               	movwf	??_main^0,c
   579  0019DA  0EBA               	movlw	186
   580  0019DC                     u827:
   581  0019DC  2EE8               	decfsz	wreg,f,c
   582  0019DE  D7FE               	bra	u827
   583  0019E0  2E35               	decfsz	??_main^0,f,c
   584  0019E2  D7FC               	bra	u827
   585  0019E4  2E36               	decfsz	(??_main+1)^0,f,c
   586  0019E6  D7FA               	bra	u827
   587  0019E8  D000               	nop2	
   588  0019EA                     
   589                           ;main.c: 52: LATEbits.LE0=1;
   590  0019EA  808D               	bsf	141,0,c	;volatile
   591  0019EC                     
   592                           ;main.c: 53: _delay((unsigned long)((50)*(16000000/4000.0)));
   593  0019EC  0E02               	movlw	2
   594  0019EE  6E36               	movwf	(??_main+1)^0,c
   595  0019F0  0E04               	movlw	4
   596  0019F2  6E35               	movwf	??_main^0,c
   597  0019F4  0EBA               	movlw	186
   598  0019F6                     u837:
   599  0019F6  2EE8               	decfsz	wreg,f,c
   600  0019F8  D7FE               	bra	u837
   601  0019FA  2E35               	decfsz	??_main^0,f,c
   602  0019FC  D7FC               	bra	u837
   603  0019FE  2E36               	decfsz	(??_main+1)^0,f,c
   604  001A00  D7FA               	bra	u837
   605  001A02  D000               	nop2	
   606  001A04                     
   607                           ;main.c: 54: LATEbits.LE0=0;
   608  001A04  908D               	bcf	141,0,c	;volatile
   609  001A06                     
   610                           ;main.c: 55: LATEbits.LE1=0;
   611  001A06  928D               	bcf	141,1,c	;volatile
   612  001A08                     
   613                           ;main.c: 56: LATEbits.LE2=0;
   614  001A08  948D               	bcf	141,2,c	;volatile
   615  001A0A  EFDA  F00C         	goto	l63
   616  001A0E  EF00  F000         	goto	start
   617  001A12                     __end_of_main:
   618                           	callstack 0
   619                           
   620 ;; *************** function _shutdown *****************
   621 ;; Defined at:
   622 ;;		line 61 in file "main.c"
   623 ;; Parameters:    Size  Location     Type
   624 ;;		None
   625 ;; Auto vars:     Size  Location     Type
   626 ;;		None
   627 ;; Return value:  Size  Location     Type
   628 ;;                  1    wreg      void 
   629 ;; Registers used:
   630 ;;		None
   631 ;; Tracked objects:
   632 ;;		On entry : 0/0
   633 ;;		On exit  : 0/0
   634 ;;		Unchanged: 0/0
   635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   640 ;;Total ram usage:        0 bytes
   641 ;; Hardware stack levels used: 1
   642 ;; This function calls:
   643 ;;		Nothing
   644 ;; This function is called by:
   645 ;;		_main
   646 ;; This function uses a non-reentrant model
   647 ;;
   648                           
   649                           	psect	text1
   650  001888                     __ptext1:
   651                           	callstack 0
   652  001888                     _shutdown:
   653                           	callstack 30
   654  001888                     
   655                           ;main.c: 63: TRISAbits.RA0=0;
   656  001888  9092               	bcf	146,0,c	;volatile
   657                           
   658                           ;main.c: 64: LATAbits.LA0=0;
   659  00188A  9089               	bcf	137,0,c	;volatile
   660                           
   661                           ;main.c: 65: ANSELAbits.ANSA0=0;
   662  00188C  010F               	movlb	15	; () banked
   663  00188E  9138               	bcf	56,0,b	;volatile
   664                           
   665                           ;main.c: 66: TRISAbits.RA1=0;
   666  001890  9292               	bcf	146,1,c	;volatile
   667                           
   668                           ;main.c: 67: LATAbits.LA1=0;
   669  001892  9289               	bcf	137,1,c	;volatile
   670                           
   671                           ;main.c: 68: ANSELAbits.ANSA1=0;
   672  001894  9338               	bcf	56,1,b	;volatile
   673                           
   674                           ;main.c: 69: TRISAbits.RA2=0;
   675  001896  9492               	bcf	146,2,c	;volatile
   676                           
   677                           ;main.c: 70: LATAbits.LA2=1;
   678  001898  8489               	bsf	137,2,c	;volatile
   679                           
   680                           ;main.c: 71: ANSELAbits.ANSA2=0;
   681  00189A  9538               	bcf	56,2,b	;volatile
   682                           
   683                           ;main.c: 72: TRISAbits.RA3=0;
   684  00189C  9692               	bcf	146,3,c	;volatile
   685                           
   686                           ;main.c: 73: LATAbits.LA3=0;
   687  00189E  9689               	bcf	137,3,c	;volatile
   688                           
   689                           ;main.c: 74: ANSELAbits.ANSA3=0;
   690  0018A0  9738               	bcf	56,3,b	;volatile
   691                           
   692                           ;main.c: 75: TRISAbits.RA4=0;
   693  0018A2  9892               	bcf	146,4,c	;volatile
   694                           
   695                           ;main.c: 76: LATAbits.LA4=0;
   696  0018A4  9889               	bcf	137,4,c	;volatile
   697                           
   698                           ;main.c: 78: TRISAbits.RA5=0;
   699  0018A6  9A92               	bcf	146,5,c	;volatile
   700                           
   701                           ;main.c: 79: LATAbits.LA5=0;
   702  0018A8  9A89               	bcf	137,5,c	;volatile
   703                           
   704                           ;main.c: 80: ANSELAbits.ANSA5=0;
   705  0018AA  9B38               	bcf	56,5,b	;volatile
   706                           
   707                           ;main.c: 81: TRISAbits.RA6=0;
   708  0018AC  9C92               	bcf	146,6,c	;volatile
   709                           
   710                           ;main.c: 82: LATAbits.LA6=0;
   711  0018AE  9C89               	bcf	137,6,c	;volatile
   712                           
   713                           ;main.c: 84: TRISAbits.RA7=0;
   714  0018B0  9E92               	bcf	146,7,c	;volatile
   715                           
   716                           ;main.c: 85: LATAbits.LA7=0;
   717  0018B2  9E89               	bcf	137,7,c	;volatile
   718                           
   719                           ;main.c: 89: LATBbits.LB0=0;
   720  0018B4  908A               	bcf	138,0,c	;volatile
   721                           
   722                           ;main.c: 90: TRISBbits.RB0=0;
   723  0018B6  9093               	bcf	147,0,c	;volatile
   724                           
   725                           ;main.c: 91: ANSELBbits.ANSB0=0;
   726  0018B8  9139               	bcf	57,0,b	;volatile
   727                           
   728                           ;main.c: 92: LATBbits.LB1=1;
   729  0018BA  828A               	bsf	138,1,c	;volatile
   730                           
   731                           ;main.c: 93: TRISBbits.RB1=0;
   732  0018BC  9293               	bcf	147,1,c	;volatile
   733                           
   734                           ;main.c: 94: ANSELBbits.ANSB1=0;
   735  0018BE  9339               	bcf	57,1,b	;volatile
   736                           
   737                           ;main.c: 95: LATBbits.LB2=0;
   738  0018C0  948A               	bcf	138,2,c	;volatile
   739                           
   740                           ;main.c: 96: TRISBbits.RB2=0;
   741  0018C2  9493               	bcf	147,2,c	;volatile
   742                           
   743                           ;main.c: 97: ANSELBbits.ANSB2=0;
   744  0018C4  9539               	bcf	57,2,b	;volatile
   745                           
   746                           ;main.c: 98: LATBbits.LB3=0;
   747  0018C6  968A               	bcf	138,3,c	;volatile
   748                           
   749                           ;main.c: 99: TRISBbits.RB3=0;
   750  0018C8  9693               	bcf	147,3,c	;volatile
   751                           
   752                           ;main.c: 100: ANSELBbits.ANSB3=0;
   753  0018CA  9739               	bcf	57,3,b	;volatile
   754                           
   755                           ;main.c: 101: LATBbits.LB4=0;
   756  0018CC  988A               	bcf	138,4,c	;volatile
   757                           
   758                           ;main.c: 102: TRISBbits.RB4=0;
   759  0018CE  9893               	bcf	147,4,c	;volatile
   760                           
   761                           ;main.c: 103: ANSELBbits.ANSB4=0;
   762  0018D0  9939               	bcf	57,4,b	;volatile
   763                           
   764                           ;main.c: 104: LATBbits.LB5=0;
   765  0018D2  9A8A               	bcf	138,5,c	;volatile
   766                           
   767                           ;main.c: 105: TRISBbits.RB5=0;
   768  0018D4  9A93               	bcf	147,5,c	;volatile
   769                           
   770                           ;main.c: 106: ANSELBbits.ANSB5=0;
   771  0018D6  9B39               	bcf	57,5,b	;volatile
   772                           
   773                           ;main.c: 107: LATBbits.LB6=0;
   774  0018D8  9C8A               	bcf	138,6,c	;volatile
   775                           
   776                           ;main.c: 108: TRISBbits.RB6=0;
   777  0018DA  9C93               	bcf	147,6,c	;volatile
   778                           
   779                           ;main.c: 109: LATBbits.LB7=0;
   780  0018DC  9E8A               	bcf	138,7,c	;volatile
   781                           
   782                           ;main.c: 110: TRISBbits.RB7=0;
   783  0018DE  9E93               	bcf	147,7,c	;volatile
   784                           
   785                           ;main.c: 113: LATCbits.LC0=0;
   786  0018E0  908B               	bcf	139,0,c	;volatile
   787                           
   788                           ;main.c: 115: LATCbits.LC1=0;
   789  0018E2  928B               	bcf	139,1,c	;volatile
   790                           
   791                           ;main.c: 117: TRISCbits.RC1=0;
   792  0018E4  9294               	bcf	148,1,c	;volatile
   793                           
   794                           ;main.c: 119: LATCbits.LC2=0;
   795  0018E6  948B               	bcf	139,2,c	;volatile
   796                           
   797                           ;main.c: 120: TRISCbits.RC2=0;
   798  0018E8  9494               	bcf	148,2,c	;volatile
   799                           
   800                           ;main.c: 121: ANSELCbits.ANSC2=0;
   801  0018EA  953A               	bcf	58,2,b	;volatile
   802                           
   803                           ;main.c: 123: LATCbits.LC3=0;
   804  0018EC  968B               	bcf	139,3,c	;volatile
   805                           
   806                           ;main.c: 124: TRISCbits.RC3=0;
   807  0018EE  9694               	bcf	148,3,c	;volatile
   808                           
   809                           ;main.c: 125: ANSELCbits.ANSC3=0;
   810  0018F0  973A               	bcf	58,3,b	;volatile
   811                           
   812                           ;main.c: 127: LATCbits.LC4=0;
   813  0018F2  988B               	bcf	139,4,c	;volatile
   814                           
   815                           ;main.c: 128: TRISCbits.RC4=0;
   816  0018F4  9894               	bcf	148,4,c	;volatile
   817                           
   818                           ;main.c: 129: ANSELCbits.ANSC4=0;
   819  0018F6  993A               	bcf	58,4,b	;volatile
   820                           
   821                           ;main.c: 131: LATCbits.LC5=0;
   822  0018F8  9A8B               	bcf	139,5,c	;volatile
   823                           
   824                           ;main.c: 132: TRISCbits.RC5=0;
   825  0018FA  9A94               	bcf	148,5,c	;volatile
   826                           
   827                           ;main.c: 133: ANSELCbits.ANSC5=0;
   828  0018FC  9B3A               	bcf	58,5,b	;volatile
   829                           
   830                           ;main.c: 135: LATCbits.LC6=0;
   831  0018FE  9C8B               	bcf	139,6,c	;volatile
   832                           
   833                           ;main.c: 136: TRISCbits.RC6=0;
   834  001900  9C94               	bcf	148,6,c	;volatile
   835                           
   836                           ;main.c: 137: ANSELCbits.ANSC6=0;
   837  001902  9D3A               	bcf	58,6,b	;volatile
   838                           
   839                           ;main.c: 139: LATCbits.LC7=0;
   840  001904  9E8B               	bcf	139,7,c	;volatile
   841                           
   842                           ;main.c: 140: TRISCbits.RC7=0;
   843  001906  9E94               	bcf	148,7,c	;volatile
   844                           
   845                           ;main.c: 141: ANSELCbits.ANSC7=0;
   846  001908  9F3A               	bcf	58,7,b	;volatile
   847                           
   848                           ;main.c: 144: TRISDbits.RD0=0;
   849  00190A  9095               	bcf	149,0,c	;volatile
   850                           
   851                           ;main.c: 145: LATDbits.LD0=0;
   852  00190C  908C               	bcf	140,0,c	;volatile
   853                           
   854                           ;main.c: 146: ANSELDbits.ANSD0=0;
   855  00190E  913B               	bcf	59,0,b	;volatile
   856                           
   857                           ;main.c: 148: TRISDbits.RD1=1;
   858  001910  8295               	bsf	149,1,c	;volatile
   859                           
   860                           ;main.c: 150: ANSELDbits.ANSD1=0;
   861  001912  933B               	bcf	59,1,b	;volatile
   862                           
   863                           ;main.c: 152: TRISDbits.RD2=0;
   864  001914  9495               	bcf	149,2,c	;volatile
   865                           
   866                           ;main.c: 153: LATDbits.LD2=0;
   867  001916  948C               	bcf	140,2,c	;volatile
   868                           
   869                           ;main.c: 154: ANSELDbits.ANSD2=0;
   870  001918  953B               	bcf	59,2,b	;volatile
   871                           
   872                           ;main.c: 156: TRISDbits.RD3=0;
   873  00191A  9695               	bcf	149,3,c	;volatile
   874                           
   875                           ;main.c: 157: LATDbits.LD3=1;
   876  00191C  868C               	bsf	140,3,c	;volatile
   877                           
   878                           ;main.c: 158: ANSELDbits.ANSD3=0;
   879  00191E  973B               	bcf	59,3,b	;volatile
   880                           
   881                           ;main.c: 160: TRISDbits.RD4=0;
   882  001920  9895               	bcf	149,4,c	;volatile
   883                           
   884                           ;main.c: 161: LATDbits.LD4=0;
   885  001922  988C               	bcf	140,4,c	;volatile
   886                           
   887                           ;main.c: 162: ANSELDbits.ANSD4=0;
   888  001924  993B               	bcf	59,4,b	;volatile
   889                           
   890                           ;main.c: 164: TRISDbits.RD5=0;
   891  001926  9A95               	bcf	149,5,c	;volatile
   892                           
   893                           ;main.c: 165: LATDbits.LD5=0;
   894  001928  9A8C               	bcf	140,5,c	;volatile
   895                           
   896                           ;main.c: 166: ANSELDbits.ANSD5=0;
   897  00192A  9B3B               	bcf	59,5,b	;volatile
   898                           
   899                           ;main.c: 168: TRISDbits.RD6=0;
   900  00192C  9C95               	bcf	149,6,c	;volatile
   901                           
   902                           ;main.c: 169: LATDbits.LD6=0;
   903  00192E  9C8C               	bcf	140,6,c	;volatile
   904                           
   905                           ;main.c: 170: ANSELDbits.ANSD6=0;
   906  001930  9D3B               	bcf	59,6,b	;volatile
   907                           
   908                           ;main.c: 172: TRISDbits.RD7=0;
   909  001932  9E95               	bcf	149,7,c	;volatile
   910                           
   911                           ;main.c: 173: LATDbits.LD7=0;
   912  001934  9E8C               	bcf	140,7,c	;volatile
   913                           
   914                           ;main.c: 174: ANSELDbits.ANSD7=0;
   915  001936  9F3B               	bcf	59,7,b	;volatile
   916                           
   917                           ;main.c: 177: TRISEbits.RE0=0;
   918  001938  9096               	bcf	150,0,c	;volatile
   919                           
   920                           ;main.c: 178: LATEbits.LE0=0;
   921  00193A  908D               	bcf	141,0,c	;volatile
   922                           
   923                           ;main.c: 179: ANSELEbits.ANSE0=0;
   924  00193C  913C               	bcf	60,0,b	;volatile
   925                           
   926                           ;main.c: 180: TRISEbits.RE1=0;
   927  00193E  9296               	bcf	150,1,c	;volatile
   928                           
   929                           ;main.c: 181: LATEbits.LE1=0;
   930  001940  928D               	bcf	141,1,c	;volatile
   931                           
   932                           ;main.c: 182: ANSELEbits.ANSE1=0;
   933  001942  933C               	bcf	60,1,b	;volatile
   934                           
   935                           ;main.c: 183: TRISEbits.RE2=0;
   936  001944  9496               	bcf	150,2,c	;volatile
   937                           
   938                           ;main.c: 184: LATEbits.LE2=0;
   939  001946  948D               	bcf	141,2,c	;volatile
   940                           
   941                           ;main.c: 185: ANSELEbits.ANSE2=0;
   942  001948  953C               	bcf	60,2,b	;volatile
   943                           
   944                           ;main.c: 188: ADCON0bits.ADON=0;
   945  00194A  90C2               	bcf	194,0,c	;volatile
   946                           
   947                           ;main.c: 189: VREFCON0bits.FVREN=0;
   948  00194C  9F42               	bcf	66,7,b	;volatile
   949                           
   950                           ;main.c: 190: PMD0bits.UART2MD=1;
   951  00194E  8F3F               	bsf	63,7,b	;volatile
   952                           
   953                           ;main.c: 191: PMD0bits.UART1MD=1;
   954  001950  8D3F               	bsf	63,6,b	;volatile
   955                           
   956                           ;main.c: 192: PMD0bits.TMR6MD=1;
   957  001952  8B3F               	bsf	63,5,b	;volatile
   958                           
   959                           ;main.c: 193: PMD0bits.TMR5MD=1;
   960  001954  893F               	bsf	63,4,b	;volatile
   961                           
   962                           ;main.c: 194: PMD0bits.TMR4MD=1;
   963  001956  873F               	bsf	63,3,b	;volatile
   964                           
   965                           ;main.c: 195: PMD0bits.TMR3MD=1;
   966  001958  853F               	bsf	63,2,b	;volatile
   967                           
   968                           ;main.c: 196: PMD0bits.TMR2MD=1;
   969  00195A  833F               	bsf	63,1,b	;volatile
   970                           
   971                           ;main.c: 197: PMD0bits.TMR1MD=1;
   972  00195C  813F               	bsf	63,0,b	;volatile
   973                           
   974                           ;main.c: 199: PMD0bits.SPI2MD=1;
   975  00195E  853F               	bsf	63,2,b	;volatile
   976                           
   977                           ;main.c: 200: PMD0bits.SPI1MD=1;
   978  001960  833F               	bsf	63,1,b	;volatile
   979                           
   980                           ;main.c: 201: PMD0=0xFF;
   981  001962  693F               	setf	63,b	;volatile
   982                           
   983                           ;main.c: 202: PMD1=0xFF;
   984  001964  693E               	setf	62,b	;volatile
   985                           
   986                           ;main.c: 203: PMD2=0xFF;
   987  001966  693D               	setf	61,b	;volatile
   988  001968                     
   989                           ; BSR set to: 15
   990  001968  0012               	return		;funcret
   991  00196A                     __end_of_shutdown:
   992                           	callstack 0
   993                           
   994 ;; *************** function _LoRaStart *****************
   995 ;; Defined at:
   996 ;;		line 12 in file "LoRa.c"
   997 ;; Parameters:    Size  Location     Type
   998 ;;  freq            4   46[COMRAM] float 
   999 ;;  syncWord        1   50[COMRAM] unsigned char 
  1000 ;; Auto vars:     Size  Location     Type
  1001 ;;		None
  1002 ;; Return value:  Size  Location     Type
  1003 ;;                  1    wreg      void 
  1004 ;; Registers used:
  1005 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1006 ;; Tracked objects:
  1007 ;;		On entry : 0/0
  1008 ;;		On exit  : 0/0
  1009 ;;		Unchanged: 0/0
  1010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1011 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1013 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1014 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1015 ;;Total ram usage:        6 bytes
  1016 ;; Hardware stack levels used: 1
  1017 ;; Hardware stack levels required when called: 4
  1018 ;; This function calls:
  1019 ;;		_LoRaOptimalLoad
  1020 ;;		_LoRaSetFrequency
  1021 ;;		_printf
  1022 ;;		_setLoRaMode
  1023 ;; This function is called by:
  1024 ;;		_main
  1025 ;; This function uses a non-reentrant model
  1026 ;;
  1027                           
  1028                           	psect	text2
  1029  001A12                     __ptext2:
  1030                           	callstack 0
  1031  001A12                     _LoRaStart:
  1032                           	callstack 26
  1033  001A12                     
  1034                           ;LoRa.c: 13: printf("LoRa Start\r\n");
  1035  001A12  0E73               	movlw	low STR_1
  1036  001A14  6E08               	movwf	printf@f^0,c
  1037  001A16  0E10               	movlw	high STR_1
  1038  001A18  6E09               	movwf	(printf@f+1)^0,c
  1039  001A1A  EC24  F00B         	call	_printf	;wreg free
  1040  001A1E                     
  1041                           ;LoRa.c: 15: ANSELAbits.ANSA2=0;
  1042  001A1E  010F               	movlb	15	; () banked
  1043  001A20  9538               	bcf	56,2,b	;volatile
  1044  001A22                     
  1045                           ; BSR set to: 15
  1046                           ;LoRa.c: 19: TRISDbits.RD1=1;
  1047  001A22  8295               	bsf	149,1,c	;volatile
  1048  001A24                     
  1049                           ; BSR set to: 15
  1050                           ;LoRa.c: 20: TRISDbits.RD4=0;
  1051  001A24  9895               	bcf	149,4,c	;volatile
  1052  001A26                     
  1053                           ; BSR set to: 15
  1054                           ;LoRa.c: 21: TRISDbits.RD0=0;
  1055  001A26  9095               	bcf	149,0,c	;volatile
  1056  001A28                     
  1057                           ; BSR set to: 15
  1058                           ;LoRa.c: 22: TRISDbits.RD3=0;
  1059  001A28  9695               	bcf	149,3,c	;volatile
  1060  001A2A                     
  1061                           ; BSR set to: 15
  1062                           ;LoRa.c: 23: ANSELDbits.ANSD1=0;
  1063  001A2A  933B               	bcf	59,1,b	;volatile
  1064  001A2C                     
  1065                           ; BSR set to: 15
  1066                           ;LoRa.c: 24: ANSELDbits.ANSD4=0;
  1067  001A2C  993B               	bcf	59,4,b	;volatile
  1068  001A2E                     
  1069                           ; BSR set to: 15
  1070                           ;LoRa.c: 25: ANSELDbits.ANSD3=0;
  1071  001A2E  973B               	bcf	59,3,b	;volatile
  1072  001A30                     
  1073                           ; BSR set to: 15
  1074                           ;LoRa.c: 26: ANSELDbits.ANSD0=0;
  1075  001A30  913B               	bcf	59,0,b	;volatile
  1076  001A32                     
  1077                           ; BSR set to: 15
  1078                           ;LoRa.c: 27: LATDbits.LATD3=1;
  1079  001A32  868C               	bsf	140,3,c	;volatile
  1080  001A34                     
  1081                           ; BSR set to: 15
  1082                           ;LoRa.c: 29: PMD1bits.MSSP2MD=0;
  1083  001A34  9F3E               	bcf	62,7,b	;volatile
  1084  001A36                     
  1085                           ; BSR set to: 15
  1086                           ;LoRa.c: 30: PMD0bits.SPI2MD=0;
  1087  001A36  953F               	bcf	63,2,b	;volatile
  1088  001A38                     
  1089                           ; BSR set to: 15
  1090                           ;LoRa.c: 34: SSP2CON1bits.CKP=0;
  1091  001A38  986C               	bcf	108,4,c	;volatile
  1092  001A3A                     
  1093                           ; BSR set to: 15
  1094                           ;LoRa.c: 35: SSP2STATbits.CKE=1;
  1095  001A3A  8C6D               	bsf	109,6,c	;volatile
  1096  001A3C                     
  1097                           ; BSR set to: 15
  1098                           ;LoRa.c: 38: SSP2STATbits.SMP=1;
  1099  001A3C  8E6D               	bsf	109,7,c	;volatile
  1100  001A3E                     
  1101                           ; BSR set to: 15
  1102                           ;LoRa.c: 41: SSP2CON1bits.SSPM=0b0010;
  1103  001A3E  506C               	movf	108,w,c	;volatile
  1104  001A40  0BF0               	andlw	-16
  1105  001A42  0902               	iorlw	2
  1106  001A44  6E6C               	movwf	108,c	;volatile
  1107  001A46                     
  1108                           ; BSR set to: 15
  1109                           ;LoRa.c: 47: if(1){
  1110  001A46  8A6C               	bsf	108,5,c	;volatile
  1111  001A48                     
  1112                           ; BSR set to: 15
  1113                           ;LoRa.c: 48: printf("Set LoRa Mode\r\n");
  1114  001A48  0E63               	movlw	low STR_2
  1115  001A4A  6E08               	movwf	printf@f^0,c
  1116  001A4C  0E10               	movlw	high STR_2
  1117  001A4E  6E09               	movwf	(printf@f+1)^0,c
  1118  001A50  EC24  F00B         	call	_printf	;wreg free
  1119  001A54                     
  1120                           ;LoRa.c: 49: };LoRa.c: 50: _delay((unsigned long)((10)*(16000000/4000.0)));
  1121  001A54  0E34               	movlw	52
  1122  001A56  6E34               	movwf	??_LoRaStart^0,c
  1123  001A58  0EF2               	movlw	242
  1124  001A5A                     u847:
  1125  001A5A  2EE8               	decfsz	wreg,f,c
  1126  001A5C  D7FE               	bra	u847
  1127  001A5E  2E34               	decfsz	??_LoRaStart^0,f,c
  1128  001A60  D7FC               	bra	u847
  1129  001A62                     
  1130                           ;LoRa.c: 51: setLoRaMode();
  1131  001A62  EC2E  F00E         	call	_setLoRaMode	;wreg free
  1132  001A66                     
  1133                           ;LoRa.c: 53: if(1){
  1134  001A66  0E34               	movlw	52
  1135  001A68  6E34               	movwf	??_LoRaStart^0,c
  1136  001A6A  0EF2               	movlw	242
  1137  001A6C                     u857:
  1138  001A6C  2EE8               	decfsz	wreg,f,c
  1139  001A6E  D7FE               	bra	u857
  1140  001A70  2E34               	decfsz	??_LoRaStart^0,f,c
  1141  001A72  D7FC               	bra	u857
  1142  001A74                     
  1143                           ;LoRa.c: 54: printf("LoRa load optimal register values\r\n");
  1144  001A74  0E09               	movlw	low STR_3
  1145  001A76  6E08               	movwf	printf@f^0,c
  1146  001A78  0E10               	movlw	high STR_3
  1147  001A7A  6E09               	movwf	(printf@f+1)^0,c
  1148  001A7C  EC24  F00B         	call	_printf	;wreg free
  1149  001A80                     
  1150                           ;LoRa.c: 57: if(1){
  1151  001A80  5033               	movf	LoRaStart@syncWord^0,w,c
  1152  001A82  EC61  F00A         	call	_LoRaOptimalLoad
  1153  001A86                     
  1154                           ;LoRa.c: 58: printf("LoRa set frequency\r\n");
  1155  001A86  0E2D               	movlw	low STR_4
  1156  001A88  6E08               	movwf	printf@f^0,c
  1157  001A8A  0E10               	movlw	high STR_4
  1158  001A8C  6E09               	movwf	(printf@f+1)^0,c
  1159  001A8E  EC24  F00B         	call	_printf	;wreg free
  1160  001A92                     
  1161                           ;LoRa.c: 59: };LoRa.c: 60: LoRaSetFrequency(freq);
  1162  001A92  C02F  F024         	movff	LoRaStart@freq,LoRaSetFrequency@freqMHz
  1163  001A96  C030  F025         	movff	LoRaStart@freq+1,LoRaSetFrequency@freqMHz+1
  1164  001A9A  C031  F026         	movff	LoRaStart@freq+2,LoRaSetFrequency@freqMHz+2
  1165  001A9E  C032  F027         	movff	LoRaStart@freq+3,LoRaSetFrequency@freqMHz+3
  1166  001AA2  EC8E  F00D         	call	_LoRaSetFrequency	;wreg free
  1167  001AA6  0012               	return		;funcret
  1168  001AA8                     __end_of_LoRaStart:
  1169                           	callstack 0
  1170                           
  1171 ;; *************** function _printf *****************
  1172 ;; Defined at:
  1173 ;;		line 477 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  1174 ;; Parameters:    Size  Location     Type
  1175 ;;  f               2    7[COMRAM] PTR const unsigned char 
  1176 ;;		 -> STR_7(12), STR_6(10), STR_5(16), STR_4(21), 
  1177 ;;		 -> STR_3(36), STR_2(16), STR_1(13), 
  1178 ;; Auto vars:     Size  Location     Type
  1179 ;;  idx             1   15[COMRAM] unsigned char 
  1180 ;;  tmpval          4    0        struct .
  1181 ;;  cp              3    0        PTR const unsigned char 
  1182 ;;  val             2   16[COMRAM] unsigned int 
  1183 ;;  ap              2   13[COMRAM] PTR void [1]
  1184 ;;		 -> ?_printf(2), 
  1185 ;;  len             2    0        unsigned int 
  1186 ;;  c               1   19[COMRAM] unsigned char 
  1187 ;;  prec            1   18[COMRAM] char 
  1188 ;;  flag            1    0        unsigned char 
  1189 ;; Return value:  Size  Location     Type
  1190 ;;                  2    7[COMRAM] int 
  1191 ;; Registers used:
  1192 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1193 ;; Tracked objects:
  1194 ;;		On entry : 0/0
  1195 ;;		On exit  : 0/0
  1196 ;;		Unchanged: 0/0
  1197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1198 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1199 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1201 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1202 ;;Total ram usage:       13 bytes
  1203 ;; Hardware stack levels used: 1
  1204 ;; Hardware stack levels required when called: 1
  1205 ;; This function calls:
  1206 ;;		___lwdiv
  1207 ;;		_putch
  1208 ;; This function is called by:
  1209 ;;		_LoRaStart
  1210 ;;		_LoRaTXData
  1211 ;;		_LoRaTXMode
  1212 ;;		_LoRaDumpRegisters
  1213 ;; This function uses a non-reentrant model
  1214 ;;
  1215                           
  1216                           	psect	text3
  1217  001648                     __ptext3:
  1218                           	callstack 0
  1219  001648                     _printf:
  1220                           	callstack 28
  1221  001648                     
  1222                           ;doprnt.c: 479: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 521: signed char prec;;dopr
      +                          nt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: unsigned long vd;;d
      +                          oprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned int val;;do
      +                          prnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = __va_sta
      +                          rt();
  1223  001648  0E0A               	movlw	low (?_printf+2)
  1224  00164A  6E0E               	movwf	printf@ap^0,c
  1225  00164C  0E00               	movlw	high (?_printf+2)
  1226  00164E  6E0F               	movwf	(printf@ap+1)^0,c
  1227                           
  1228                           ;doprnt.c: 553: while((c = *f++)) {
  1229  001650  EFAF  F00B         	goto	l1818
  1230  001654                     l1782:
  1231                           
  1232                           ;doprnt.c: 555: if(c != '%')
  1233  001654  0E25               	movlw	37
  1234  001656  1814               	xorwf	printf@c^0,w,c
  1235  001658  B4D8               	btfsc	status,2,c
  1236  00165A  EF31  F00B         	goto	u721
  1237  00165E  EF33  F00B         	goto	u720
  1238  001662                     u721:
  1239  001662  EF38  F00B         	goto	l1786
  1240  001666                     u720:
  1241  001666                     
  1242                           ;doprnt.c: 557: {;doprnt.c: 558: (putch(c) );
  1243  001666  5014               	movf	printf@c^0,w,c
  1244  001668  EC52  F00E         	call	_putch
  1245                           
  1246                           ;doprnt.c: 559: continue;
  1247  00166C  EFAF  F00B         	goto	l1818
  1248  001670                     l1786:
  1249  001670  C008  FFF6         	movff	printf@f,tblptrl
  1250  001674  C009  FFF7         	movff	printf@f+1,tblptrh
  1251  001678  4A08               	infsnz	printf@f^0,f,c
  1252  00167A  2A09               	incf	(printf@f+1)^0,f,c
  1253  00167C                     	if	0	;tblptru may be non-zero
  1254  00167C                     	endif
  1255  00167C                     	if	0	;tblptru may be non-zero
  1256  00167C                     	endif
  1257  00167C  0008               	tblrd		*
  1258  00167E  CFF5 F014          	movff	tablat,printf@c
  1259  001682  5014               	movf	printf@c^0,w,c
  1260                           
  1261                           ; Switch size 1, requested type "simple"
  1262                           ; Number of cases is 3, Range of values is 0 to 120
  1263                           ; switch strategies available:
  1264                           ; Name         Instructions Cycles
  1265                           ; simple_byte           10     6 (average)
  1266                           ;	Chosen strategy is simple_byte
  1267  001684  0A00               	xorlw	0	; case 0
  1268  001686  B4D8               	btfsc	status,2,c
  1269  001688  EFC0  F00B         	goto	l229
  1270  00168C  0A58               	xorlw	88	; case 88
  1271  00168E  B4D8               	btfsc	status,2,c
  1272  001690  EF50  F00B         	goto	l1792
  1273  001694  0A20               	xorlw	32	; case 120
  1274  001696  B4D8               	btfsc	status,2,c
  1275  001698  EF50  F00B         	goto	l1792
  1276  00169C  EFAF  F00B         	goto	l1818
  1277  0016A0                     l1792:
  1278                           
  1279                           ;doprnt.c: 1299: {;doprnt.c: 1312: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (uns
      +                          igned)0));
  1280  0016A0  C00E  FFD9         	movff	printf@ap,fsr2l
  1281  0016A4  C00F  FFDA         	movff	printf@ap+1,fsr2h
  1282  0016A8  CFDE F011          	movff	postinc2,printf@val
  1283  0016AC  CFDD F012          	movff	postdec2,printf@val+1
  1284  0016B0  0E02               	movlw	2
  1285  0016B2  260E               	addwf	printf@ap^0,f,c
  1286  0016B4  0E00               	movlw	0
  1287  0016B6  220F               	addwfc	(printf@ap+1)^0,f,c
  1288  0016B8                     
  1289                           ;doprnt.c: 1313: };doprnt.c: 1342: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0]
      +                           ; c++)
  1290  0016B8  0E01               	movlw	1
  1291  0016BA  6E14               	movwf	printf@c^0,c
  1292  0016BC                     l1802:
  1293                           
  1294                           ;doprnt.c: 1343: if(val < hexpowers[c])
  1295  0016BC  5014               	movf	printf@c^0,w,c
  1296  0016BE  0D02               	mullw	2
  1297  0016C0  0E01               	movlw	low _hexpowers
  1298  0016C2  24F3               	addwf	243,w,c
  1299  0016C4  6EF6               	movwf	tblptrl,c
  1300  0016C6  0E10               	movlw	high _hexpowers
  1301  0016C8  20F4               	addwfc	244,w,c
  1302  0016CA  6EF7               	movwf	tblptrh,c
  1303  0016CC                     	if	0	;There are less than 3 active tblptr bytes
  1304  0016CC                     	endif
  1305  0016CC  0009               	tblrd		*+
  1306  0016CE  50F5               	movf	tablat,w,c
  1307  0016D0  5C11               	subwf	printf@val^0,w,c
  1308  0016D2  0009               	tblrd		*+
  1309  0016D4  50F5               	movf	tablat,w,c
  1310  0016D6  5812               	subwfb	(printf@val+1)^0,w,c
  1311  0016D8  B0D8               	btfsc	status,0,c
  1312  0016DA  EF71  F00B         	goto	u731
  1313  0016DE  EF73  F00B         	goto	u730
  1314  0016E2                     u731:
  1315  0016E2  EF75  F00B         	goto	l1806
  1316  0016E6                     u730:
  1317  0016E6  EF7F  F00B         	goto	l223
  1318  0016EA                     l1806:
  1319  0016EA  2A14               	incf	printf@c^0,f,c
  1320  0016EC  0E04               	movlw	4
  1321  0016EE  1814               	xorwf	printf@c^0,w,c
  1322  0016F0  A4D8               	btfss	status,2,c
  1323  0016F2  EF7D  F00B         	goto	u741
  1324  0016F6  EF7F  F00B         	goto	u740
  1325  0016FA                     u741:
  1326  0016FA  EF5E  F00B         	goto	l1802
  1327  0016FE                     u740:
  1328  0016FE                     l223:
  1329                           
  1330                           ;doprnt.c: 1448: {;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  1331  0016FE  C014  F013         	movff	printf@c,printf@prec
  1332                           
  1333                           ;doprnt.c: 1500: while(prec--) {
  1334  001702  EFA6  F00B         	goto	l1816
  1335  001706                     l1810:
  1336                           
  1337                           ;doprnt.c: 1504: {;doprnt.c: 1525: {;doprnt.c: 1526: unsigned char idx = (val / hexpower
      +                          s[(unsigned char)prec]) & 0xF;
  1338  001706  C011  F001         	movff	printf@val,___lwdiv@dividend
  1339  00170A  C012  F002         	movff	printf@val+1,___lwdiv@dividend+1
  1340  00170E  5013               	movf	printf@prec^0,w,c
  1341  001710  0D02               	mullw	2
  1342  001712  0E01               	movlw	low _hexpowers
  1343  001714  24F3               	addwf	243,w,c
  1344  001716  6EF6               	movwf	tblptrl,c
  1345  001718  0E10               	movlw	high _hexpowers
  1346  00171A  20F4               	addwfc	244,w,c
  1347  00171C  6EF7               	movwf	tblptrh,c
  1348  00171E                     	if	0	;There are less than 3 active tblptr bytes
  1349  00171E                     	endif
  1350  00171E  0009               	tblrd		*+
  1351  001720  CFF5 F003          	movff	tablat,___lwdiv@divisor
  1352  001724  000A               	tblrd		*-
  1353  001726  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
  1354  00172A  EC54  F00D         	call	___lwdiv	;wreg free
  1355  00172E  5001               	movf	?___lwdiv^0,w,c
  1356  001730  0B0F               	andlw	15
  1357  001732  6E10               	movwf	printf@idx^0,c
  1358  001734                     
  1359                           ;doprnt.c: 1530: c = "0123456789ABCDEF"[idx];
  1360  001734  0E42               	movlw	low STR_8
  1361  001736  2410               	addwf	printf@idx^0,w,c
  1362  001738  6EF6               	movwf	tblptrl,c
  1363  00173A  6AF7               	clrf	tblptrh,c
  1364  00173C  0E10               	movlw	high STR_8
  1365  00173E  22F7               	addwfc	tblptrh,f,c
  1366  001740                     	if	0	;There are less than 3 active tblptr bytes
  1367  001740                     	endif
  1368  001740  0008               	tblrd		*
  1369  001742  CFF5 F014          	movff	tablat,printf@c
  1370  001746                     
  1371                           ;doprnt.c: 1534: };doprnt.c: 1549: };doprnt.c: 1550: (putch(c) );
  1372  001746  5014               	movf	printf@c^0,w,c
  1373  001748  EC52  F00E         	call	_putch
  1374  00174C                     l1816:
  1375  00174C  0613               	decf	printf@prec^0,f,c
  1376  00174E  2813               	incf	printf@prec^0,w,c
  1377  001750  A4D8               	btfss	status,2,c
  1378  001752  EFAD  F00B         	goto	u751
  1379  001756  EFAF  F00B         	goto	u750
  1380  00175A                     u751:
  1381  00175A  EF83  F00B         	goto	l1810
  1382  00175E                     u750:
  1383  00175E                     l1818:
  1384  00175E  C008  FFF6         	movff	printf@f,tblptrl
  1385  001762  C009  FFF7         	movff	printf@f+1,tblptrh
  1386  001766  4A08               	infsnz	printf@f^0,f,c
  1387  001768  2A09               	incf	(printf@f+1)^0,f,c
  1388  00176A                     	if	0	;tblptru may be non-zero
  1389  00176A                     	endif
  1390  00176A                     	if	0	;tblptru may be non-zero
  1391  00176A                     	endif
  1392  00176A  0008               	tblrd		*
  1393  00176C  CFF5 F014          	movff	tablat,printf@c
  1394  001770  5014               	movf	printf@c^0,w,c
  1395  001772  A4D8               	btfss	status,2,c
  1396  001774  EFBE  F00B         	goto	u761
  1397  001778  EFC0  F00B         	goto	u760
  1398  00177C                     u761:
  1399  00177C  EF2A  F00B         	goto	l1782
  1400  001780                     u760:
  1401  001780                     l229:
  1402  001780  0012               	return		;funcret
  1403  001782                     __end_of_printf:
  1404                           	callstack 0
  1405                           
  1406 ;; *************** function _putch *****************
  1407 ;; Defined at:
  1408 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\putch.c"
  1409 ;; Parameters:    Size  Location     Type
  1410 ;;  c               1    wreg     unsigned char 
  1411 ;; Auto vars:     Size  Location     Type
  1412 ;;  c               1    0[COMRAM] unsigned char 
  1413 ;; Return value:  Size  Location     Type
  1414 ;;                  1    wreg      void 
  1415 ;; Registers used:
  1416 ;;		wreg
  1417 ;; Tracked objects:
  1418 ;;		On entry : 0/0
  1419 ;;		On exit  : 0/0
  1420 ;;		Unchanged: 0/0
  1421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1426 ;;Total ram usage:        0 bytes
  1427 ;; Hardware stack levels used: 1
  1428 ;; This function calls:
  1429 ;;		Nothing
  1430 ;; This function is called by:
  1431 ;;		_printf
  1432 ;; This function uses a non-reentrant model
  1433 ;;
  1434                           
  1435                           	psect	text4
  1436  001CA4                     __ptext4:
  1437                           	callstack 0
  1438  001CA4                     _putch:
  1439                           	callstack 28
  1440  001CA4  0012               	return		;funcret
  1441  001CA6                     __end_of_putch:
  1442                           	callstack 0
  1443                           
  1444 ;; *************** function ___lwdiv *****************
  1445 ;; Defined at:
  1446 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  1447 ;; Parameters:    Size  Location     Type
  1448 ;;  dividend        2    0[COMRAM] unsigned int 
  1449 ;;  divisor         2    2[COMRAM] unsigned int 
  1450 ;; Auto vars:     Size  Location     Type
  1451 ;;  quotient        2    4[COMRAM] unsigned int 
  1452 ;;  counter         1    6[COMRAM] unsigned char 
  1453 ;; Return value:  Size  Location     Type
  1454 ;;                  2    0[COMRAM] unsigned int 
  1455 ;; Registers used:
  1456 ;;		wreg, status,2, status,0
  1457 ;; Tracked objects:
  1458 ;;		On entry : 0/0
  1459 ;;		On exit  : 0/0
  1460 ;;		Unchanged: 0/0
  1461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1462 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1463 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1465 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1466 ;;Total ram usage:        7 bytes
  1467 ;; Hardware stack levels used: 1
  1468 ;; This function calls:
  1469 ;;		Nothing
  1470 ;; This function is called by:
  1471 ;;		_printf
  1472 ;; This function uses a non-reentrant model
  1473 ;;
  1474                           
  1475                           	psect	text5
  1476  001AA8                     __ptext5:
  1477                           	callstack 0
  1478  001AA8                     ___lwdiv:
  1479                           	callstack 28
  1480  001AA8  0E00               	movlw	0
  1481  001AAA  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  1482  001AAC  0E00               	movlw	0
  1483  001AAE  6E05               	movwf	___lwdiv@quotient^0,c
  1484  001AB0  5003               	movf	___lwdiv@divisor^0,w,c
  1485  001AB2  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1486  001AB4  B4D8               	btfsc	status,2,c
  1487  001AB6  EF5F  F00D         	goto	u691
  1488  001ABA  EF61  F00D         	goto	u690
  1489  001ABE                     u691:
  1490  001ABE  EF89  F00D         	goto	l711
  1491  001AC2                     u690:
  1492  001AC2  0E01               	movlw	1
  1493  001AC4  6E07               	movwf	___lwdiv@counter^0,c
  1494  001AC6  EF69  F00D         	goto	l1766
  1495  001ACA                     l1764:
  1496  001ACA  90D8               	bcf	status,0,c
  1497  001ACC  3603               	rlcf	___lwdiv@divisor^0,f,c
  1498  001ACE  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1499  001AD0  2A07               	incf	___lwdiv@counter^0,f,c
  1500  001AD2                     l1766:
  1501  001AD2  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  1502  001AD4  EF6E  F00D         	goto	u701
  1503  001AD8  EF70  F00D         	goto	u700
  1504  001ADC                     u701:
  1505  001ADC  EF65  F00D         	goto	l1764
  1506  001AE0                     u700:
  1507  001AE0                     l1768:
  1508  001AE0  90D8               	bcf	status,0,c
  1509  001AE2  3605               	rlcf	___lwdiv@quotient^0,f,c
  1510  001AE4  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1511  001AE6  5003               	movf	___lwdiv@divisor^0,w,c
  1512  001AE8  5C01               	subwf	___lwdiv@dividend^0,w,c
  1513  001AEA  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  1514  001AEC  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1515  001AEE  A0D8               	btfss	status,0,c
  1516  001AF0  EF7C  F00D         	goto	u711
  1517  001AF4  EF7E  F00D         	goto	u710
  1518  001AF8                     u711:
  1519  001AF8  EF83  F00D         	goto	l1776
  1520  001AFC                     u710:
  1521  001AFC  5003               	movf	___lwdiv@divisor^0,w,c
  1522  001AFE  5E01               	subwf	___lwdiv@dividend^0,f,c
  1523  001B00  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  1524  001B02  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1525  001B04  8005               	bsf	___lwdiv@quotient^0,0,c
  1526  001B06                     l1776:
  1527  001B06  90D8               	bcf	status,0,c
  1528  001B08  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1529  001B0A  3203               	rrcf	___lwdiv@divisor^0,f,c
  1530  001B0C  2E07               	decfsz	___lwdiv@counter^0,f,c
  1531  001B0E  EF70  F00D         	goto	l1768
  1532  001B12                     l711:
  1533  001B12  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  1534  001B16  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1535  001B1A  0012               	return		;funcret
  1536  001B1C                     __end_of___lwdiv:
  1537                           	callstack 0
  1538                           
  1539 ;; *************** function _LoRaSetFrequency *****************
  1540 ;; Defined at:
  1541 ;;		line 225 in file "LoRa.c"
  1542 ;; Parameters:    Size  Location     Type
  1543 ;;  freqMHz         4   35[COMRAM] float 
  1544 ;; Auto vars:     Size  Location     Type
  1545 ;;  intermediate    4   42[COMRAM] unsigned long 
  1546 ;;  lsb             1   41[COMRAM] unsigned char 
  1547 ;;  mid             1   40[COMRAM] unsigned char 
  1548 ;;  msb             1   39[COMRAM] unsigned char 
  1549 ;; Return value:  Size  Location     Type
  1550 ;;                  1    wreg      void 
  1551 ;; Registers used:
  1552 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1553 ;; Tracked objects:
  1554 ;;		On entry : 0/0
  1555 ;;		On exit  : 0/0
  1556 ;;		Unchanged: 0/0
  1557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1558 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1559 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1561 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1562 ;;Total ram usage:       11 bytes
  1563 ;; Hardware stack levels used: 1
  1564 ;; Hardware stack levels required when called: 1
  1565 ;; This function calls:
  1566 ;;		_SPI2WriteByte
  1567 ;;		___flmul
  1568 ;;		___fltol
  1569 ;; This function is called by:
  1570 ;;		_LoRaStart
  1571 ;; This function uses a non-reentrant model
  1572 ;;
  1573                           
  1574                           	psect	text6
  1575  001B1C                     __ptext6:
  1576                           	callstack 0
  1577  001B1C                     _LoRaSetFrequency:
  1578                           	callstack 28
  1579  001B1C                     
  1580                           ;LoRa.c: 226: uint32_t intermediate = (freqMHz*16384);
  1581  001B1C  0E00               	movlw	0
  1582  001B1E  6E05               	movwf	___flmul@a^0,c
  1583  001B20  0E00               	movlw	0
  1584  001B22  6E06               	movwf	(___flmul@a+1)^0,c
  1585  001B24  0E80               	movlw	128
  1586  001B26  6E07               	movwf	(___flmul@a+2)^0,c
  1587  001B28  0E46               	movlw	70
  1588  001B2A  6E08               	movwf	(___flmul@a+3)^0,c
  1589  001B2C  C024  F001         	movff	LoRaSetFrequency@freqMHz,___flmul@b
  1590  001B30  C025  F002         	movff	LoRaSetFrequency@freqMHz+1,___flmul@b+1
  1591  001B34  C026  F003         	movff	LoRaSetFrequency@freqMHz+2,___flmul@b+2
  1592  001B38  C027  F004         	movff	LoRaSetFrequency@freqMHz+3,___flmul@b+3
  1593  001B3C  EC4C  F008         	call	___flmul	;wreg free
  1594  001B40  C001  F01A         	movff	?___flmul,___fltol@f1
  1595  001B44  C002  F01B         	movff	?___flmul+1,___fltol@f1+1
  1596  001B48  C003  F01C         	movff	?___flmul+2,___fltol@f1+2
  1597  001B4C  C004  F01D         	movff	?___flmul+3,___fltol@f1+3
  1598  001B50  ECC1  F00B         	call	___fltol	;wreg free
  1599  001B54  C01A  F02B         	movff	?___fltol,LoRaSetFrequency@intermediate
  1600  001B58  C01B  F02C         	movff	?___fltol+1,LoRaSetFrequency@intermediate+1
  1601  001B5C  C01C  F02D         	movff	?___fltol+2,LoRaSetFrequency@intermediate+2
  1602  001B60  C01D  F02E         	movff	?___fltol+3,LoRaSetFrequency@intermediate+3
  1603  001B64                     
  1604                           ;LoRa.c: 228: uint8_t msb = (intermediate>>16) & 0xFF;
  1605  001B64  C02D  F028         	movff	LoRaSetFrequency@intermediate+2,LoRaSetFrequency@msb
  1606  001B68                     
  1607                           ;LoRa.c: 229: uint8_t mid = (intermediate>>8)& 0xFF;
  1608  001B68  C02C  F029         	movff	LoRaSetFrequency@intermediate+1,LoRaSetFrequency@mid
  1609  001B6C                     
  1610                           ;LoRa.c: 230: uint8_t lsb = intermediate & 0xFF;
  1611  001B6C  C02B  F02A         	movff	LoRaSetFrequency@intermediate,LoRaSetFrequency@lsb
  1612  001B70                     
  1613                           ;LoRa.c: 232: SPI2WriteByte(0x06,msb);
  1614  001B70  C028  F001         	movff	LoRaSetFrequency@msb,SPI2WriteByte@data
  1615  001B74  0E06               	movlw	6
  1616  001B76  ECC8  F00D         	call	_SPI2WriteByte
  1617  001B7A                     
  1618                           ;LoRa.c: 233: SPI2WriteByte(0x07,mid);
  1619  001B7A  C029  F001         	movff	LoRaSetFrequency@mid,SPI2WriteByte@data
  1620  001B7E  0E07               	movlw	7
  1621  001B80  ECC8  F00D         	call	_SPI2WriteByte
  1622  001B84                     
  1623                           ;LoRa.c: 234: SPI2WriteByte(0x08,lsb);
  1624  001B84  C02A  F001         	movff	LoRaSetFrequency@lsb,SPI2WriteByte@data
  1625  001B88  0E08               	movlw	8
  1626  001B8A  ECC8  F00D         	call	_SPI2WriteByte
  1627  001B8E  0012               	return		;funcret
  1628  001B90                     __end_of_LoRaSetFrequency:
  1629                           	callstack 0
  1630                           
  1631 ;; *************** function ___fltol *****************
  1632 ;; Defined at:
  1633 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fltol.c"
  1634 ;; Parameters:    Size  Location     Type
  1635 ;;  f1              4   25[COMRAM] void 
  1636 ;; Auto vars:     Size  Location     Type
  1637 ;;  exp1            1   34[COMRAM] unsigned char 
  1638 ;;  sign1           1   33[COMRAM] unsigned char 
  1639 ;; Return value:  Size  Location     Type
  1640 ;;                  4   25[COMRAM] long 
  1641 ;; Registers used:
  1642 ;;		wreg, status,2, status,0
  1643 ;; Tracked objects:
  1644 ;;		On entry : 0/0
  1645 ;;		On exit  : 0/0
  1646 ;;		Unchanged: 0/0
  1647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1648 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1649 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1650 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1651 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1652 ;;Total ram usage:       10 bytes
  1653 ;; Hardware stack levels used: 1
  1654 ;; This function calls:
  1655 ;;		Nothing
  1656 ;; This function is called by:
  1657 ;;		_LoRaSetFrequency
  1658 ;; This function uses a non-reentrant model
  1659 ;;
  1660                           
  1661                           	psect	text7
  1662  001782                     __ptext7:
  1663                           	callstack 0
  1664  001782                     ___fltol:
  1665                           	callstack 28
  1666  001782  341C               	rlcf	(___fltol@f1+2)^0,w,c
  1667  001784  341D               	rlcf	(___fltol@f1+3)^0,w,c
  1668  001786  6E23               	movwf	___fltol@exp1^0,c
  1669  001788  5023               	movf	___fltol@exp1^0,w,c
  1670  00178A  A4D8               	btfss	status,2,c
  1671  00178C  EFCA  F00B         	goto	u621
  1672  001790  EFCC  F00B         	goto	u620
  1673  001794                     u621:
  1674  001794  EFD6  F00B         	goto	l1720
  1675  001798                     u620:
  1676  001798                     l1716:
  1677  001798  0E00               	movlw	0
  1678  00179A  6E1A               	movwf	?___fltol^0,c
  1679  00179C  0E00               	movlw	0
  1680  00179E  6E1B               	movwf	(?___fltol+1)^0,c
  1681  0017A0  0E00               	movlw	0
  1682  0017A2  6E1C               	movwf	(?___fltol+2)^0,c
  1683  0017A4  0E00               	movlw	0
  1684  0017A6  6E1D               	movwf	(?___fltol+3)^0,c
  1685  0017A8  EF43  F00C         	goto	l521
  1686  0017AC                     l1720:
  1687  0017AC  C01A  F01E         	movff	___fltol@f1,??___fltol
  1688  0017B0  C01B  F01F         	movff	___fltol@f1+1,??___fltol+1
  1689  0017B4  C01C  F020         	movff	___fltol@f1+2,??___fltol+2
  1690  0017B8  C01D  F021         	movff	___fltol@f1+3,??___fltol+3
  1691  0017BC  0E20               	movlw	32
  1692  0017BE  EFE6  F00B         	goto	u630
  1693  0017C2                     u635:
  1694  0017C2  90D8               	bcf	status,0,c
  1695  0017C4  3221               	rrcf	(??___fltol+3)^0,f,c
  1696  0017C6  3220               	rrcf	(??___fltol+2)^0,f,c
  1697  0017C8  321F               	rrcf	(??___fltol+1)^0,f,c
  1698  0017CA  321E               	rrcf	??___fltol^0,f,c
  1699  0017CC                     u630:
  1700  0017CC  2EE8               	decfsz	wreg,f,c
  1701  0017CE  EFE1  F00B         	goto	u635
  1702  0017D2  501E               	movf	??___fltol^0,w,c
  1703  0017D4  6E22               	movwf	___fltol@sign1^0,c
  1704  0017D6  8E1C               	bsf	(___fltol@f1+2)^0,7,c
  1705  0017D8  0EFF               	movlw	255
  1706  0017DA  161A               	andwf	___fltol@f1^0,f,c
  1707  0017DC  0EFF               	movlw	255
  1708  0017DE  161B               	andwf	(___fltol@f1+1)^0,f,c
  1709  0017E0  0EFF               	movlw	255
  1710  0017E2  161C               	andwf	(___fltol@f1+2)^0,f,c
  1711  0017E4  0E00               	movlw	0
  1712  0017E6  161D               	andwf	(___fltol@f1+3)^0,f,c
  1713  0017E8  0E96               	movlw	150
  1714  0017EA  5E23               	subwf	___fltol@exp1^0,f,c
  1715  0017EC  BE23               	btfsc	___fltol@exp1^0,7,c
  1716  0017EE  EFFD  F00B         	goto	u640
  1717  0017F2  EFFB  F00B         	goto	u641
  1718  0017F6                     u641:
  1719  0017F6  EF13  F00C         	goto	l1740
  1720  0017FA                     u640:
  1721  0017FA  5023               	movf	___fltol@exp1^0,w,c
  1722  0017FC  0A80               	xorlw	128
  1723  0017FE  0F97               	addlw	151
  1724  001800  B0D8               	btfsc	status,0,c
  1725  001802  EF05  F00C         	goto	u651
  1726  001806  EF07  F00C         	goto	u650
  1727  00180A                     u651:
  1728  00180A  EF09  F00C         	goto	l1736
  1729  00180E                     u650:
  1730  00180E  EFCC  F00B         	goto	l1716
  1731  001812                     l1736:
  1732  001812  90D8               	bcf	status,0,c
  1733  001814  321D               	rrcf	(___fltol@f1+3)^0,f,c
  1734  001816  321C               	rrcf	(___fltol@f1+2)^0,f,c
  1735  001818  321B               	rrcf	(___fltol@f1+1)^0,f,c
  1736  00181A  321A               	rrcf	___fltol@f1^0,f,c
  1737  00181C  3E23               	incfsz	___fltol@exp1^0,f,c
  1738  00181E  EF09  F00C         	goto	l1736
  1739  001822  EF2B  F00C         	goto	l1750
  1740  001826                     l1740:
  1741  001826  0E1F               	movlw	31
  1742  001828  6423               	cpfsgt	___fltol@exp1^0,c
  1743  00182A  EF19  F00C         	goto	u661
  1744  00182E  EF1B  F00C         	goto	u660
  1745  001832                     u661:
  1746  001832  EF23  F00C         	goto	l1748
  1747  001836                     u660:
  1748  001836  EFCC  F00B         	goto	l1716
  1749  00183A                     l1746:
  1750  00183A  90D8               	bcf	status,0,c
  1751  00183C  361A               	rlcf	___fltol@f1^0,f,c
  1752  00183E  361B               	rlcf	(___fltol@f1+1)^0,f,c
  1753  001840  361C               	rlcf	(___fltol@f1+2)^0,f,c
  1754  001842  361D               	rlcf	(___fltol@f1+3)^0,f,c
  1755  001844  0623               	decf	___fltol@exp1^0,f,c
  1756  001846                     l1748:
  1757  001846  5023               	movf	___fltol@exp1^0,w,c
  1758  001848  A4D8               	btfss	status,2,c
  1759  00184A  EF29  F00C         	goto	u671
  1760  00184E  EF2B  F00C         	goto	u670
  1761  001852                     u671:
  1762  001852  EF1D  F00C         	goto	l1746
  1763  001856                     u670:
  1764  001856                     l1750:
  1765  001856  5022               	movf	___fltol@sign1^0,w,c
  1766  001858  B4D8               	btfsc	status,2,c
  1767  00185A  EF31  F00C         	goto	u681
  1768  00185E  EF33  F00C         	goto	u680
  1769  001862                     u681:
  1770  001862  EF3B  F00C         	goto	l1754
  1771  001866                     u680:
  1772  001866  1E1D               	comf	(___fltol@f1+3)^0,f,c
  1773  001868  1E1C               	comf	(___fltol@f1+2)^0,f,c
  1774  00186A  1E1B               	comf	(___fltol@f1+1)^0,f,c
  1775  00186C  6C1A               	negf	___fltol@f1^0,c
  1776  00186E  0E00               	movlw	0
  1777  001870  221B               	addwfc	(___fltol@f1+1)^0,f,c
  1778  001872  221C               	addwfc	(___fltol@f1+2)^0,f,c
  1779  001874  221D               	addwfc	(___fltol@f1+3)^0,f,c
  1780  001876                     l1754:
  1781  001876  C01A  F01A         	movff	___fltol@f1,?___fltol
  1782  00187A  C01B  F01B         	movff	___fltol@f1+1,?___fltol+1
  1783  00187E  C01C  F01C         	movff	___fltol@f1+2,?___fltol+2
  1784  001882  C01D  F01D         	movff	___fltol@f1+3,?___fltol+3
  1785  001886                     l521:
  1786  001886  0012               	return		;funcret
  1787  001888                     __end_of___fltol:
  1788                           	callstack 0
  1789                           
  1790 ;; *************** function ___flmul *****************
  1791 ;; Defined at:
  1792 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcmul.c"
  1793 ;; Parameters:    Size  Location     Type
  1794 ;;  b               4    0[COMRAM] long 
  1795 ;;  a               4    4[COMRAM] long 
  1796 ;; Auto vars:     Size  Location     Type
  1797 ;;  prod            4   19[COMRAM] struct .
  1798 ;;  grs             4   13[COMRAM] unsigned long 
  1799 ;;  temp            2   23[COMRAM] struct .
  1800 ;;  bexp            1   18[COMRAM] unsigned char 
  1801 ;;  aexp            1   17[COMRAM] unsigned char 
  1802 ;;  sign            1   12[COMRAM] unsigned char 
  1803 ;; Return value:  Size  Location     Type
  1804 ;;                  4    0[COMRAM] unsigned char 
  1805 ;; Registers used:
  1806 ;;		wreg, status,2, status,0, prodl, prodh
  1807 ;; Tracked objects:
  1808 ;;		On entry : 0/0
  1809 ;;		On exit  : 0/0
  1810 ;;		Unchanged: 0/0
  1811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1812 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1813 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1814 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1815 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1816 ;;Total ram usage:       25 bytes
  1817 ;; Hardware stack levels used: 1
  1818 ;; This function calls:
  1819 ;;		Nothing
  1820 ;; This function is called by:
  1821 ;;		_LoRaSetFrequency
  1822 ;; This function uses a non-reentrant model
  1823 ;;
  1824                           
  1825                           	psect	text8
  1826  001098                     __ptext8:
  1827                           	callstack 0
  1828  001098                     ___flmul:
  1829                           	callstack 28
  1830  001098  5004               	movf	(___flmul@b+3)^0,w,c
  1831  00109A  0B80               	andlw	128
  1832  00109C  6E0D               	movwf	___flmul@sign^0,c
  1833  00109E  5004               	movf	(___flmul@b+3)^0,w,c
  1834  0010A0  2404               	addwf	(___flmul@b+3)^0,w,c
  1835  0010A2  6E13               	movwf	___flmul@bexp^0,c
  1836  0010A4  AE03               	btfss	(___flmul@b+2)^0,7,c
  1837  0010A6  EF57  F008         	goto	u431
  1838  0010AA  EF59  F008         	goto	u430
  1839  0010AE                     u431:
  1840  0010AE  EF5A  F008         	goto	l1590
  1841  0010B2                     u430:
  1842  0010B2  8013               	bsf	___flmul@bexp^0,0,c
  1843  0010B4                     l1590:
  1844  0010B4  5013               	movf	___flmul@bexp^0,w,c
  1845  0010B6  B4D8               	btfsc	status,2,c
  1846  0010B8  EF60  F008         	goto	u441
  1847  0010BC  EF62  F008         	goto	u440
  1848  0010C0                     u441:
  1849  0010C0  EF75  F008         	goto	l1598
  1850  0010C4                     u440:
  1851  0010C4  2813               	incf	___flmul@bexp^0,w,c
  1852  0010C6  A4D8               	btfss	status,2,c
  1853  0010C8  EF68  F008         	goto	u451
  1854  0010CC  EF6A  F008         	goto	u450
  1855  0010D0                     u451:
  1856  0010D0  EF72  F008         	goto	l1596
  1857  0010D4                     u450:
  1858  0010D4  0E00               	movlw	0
  1859  0010D6  6E01               	movwf	___flmul@b^0,c
  1860  0010D8  0E00               	movlw	0
  1861  0010DA  6E02               	movwf	(___flmul@b+1)^0,c
  1862  0010DC  0E00               	movlw	0
  1863  0010DE  6E03               	movwf	(___flmul@b+2)^0,c
  1864  0010E0  0E00               	movlw	0
  1865  0010E2  6E04               	movwf	(___flmul@b+3)^0,c
  1866  0010E4                     l1596:
  1867  0010E4  8E03               	bsf	(___flmul@b+2)^0,7,c
  1868  0010E6  EF7D  F008         	goto	l1600
  1869  0010EA                     l1598:
  1870  0010EA  0E00               	movlw	0
  1871  0010EC  6E01               	movwf	___flmul@b^0,c
  1872  0010EE  0E00               	movlw	0
  1873  0010F0  6E02               	movwf	(___flmul@b+1)^0,c
  1874  0010F2  0E00               	movlw	0
  1875  0010F4  6E03               	movwf	(___flmul@b+2)^0,c
  1876  0010F6  0E00               	movlw	0
  1877  0010F8  6E04               	movwf	(___flmul@b+3)^0,c
  1878  0010FA                     l1600:
  1879  0010FA  5008               	movf	(___flmul@a+3)^0,w,c
  1880  0010FC  0B80               	andlw	128
  1881  0010FE  1A0D               	xorwf	___flmul@sign^0,f,c
  1882  001100  5008               	movf	(___flmul@a+3)^0,w,c
  1883  001102  2408               	addwf	(___flmul@a+3)^0,w,c
  1884  001104  6E12               	movwf	___flmul@aexp^0,c
  1885  001106  AE07               	btfss	(___flmul@a+2)^0,7,c
  1886  001108  EF88  F008         	goto	u461
  1887  00110C  EF8A  F008         	goto	u460
  1888  001110                     u461:
  1889  001110  EF8B  F008         	goto	l1608
  1890  001114                     u460:
  1891  001114  8012               	bsf	___flmul@aexp^0,0,c
  1892  001116                     l1608:
  1893  001116  5012               	movf	___flmul@aexp^0,w,c
  1894  001118  B4D8               	btfsc	status,2,c
  1895  00111A  EF91  F008         	goto	u471
  1896  00111E  EF93  F008         	goto	u470
  1897  001122                     u471:
  1898  001122  EFA6  F008         	goto	l1616
  1899  001126                     u470:
  1900  001126  2812               	incf	___flmul@aexp^0,w,c
  1901  001128  A4D8               	btfss	status,2,c
  1902  00112A  EF99  F008         	goto	u481
  1903  00112E  EF9B  F008         	goto	u480
  1904  001132                     u481:
  1905  001132  EFA3  F008         	goto	l1614
  1906  001136                     u480:
  1907  001136  0E00               	movlw	0
  1908  001138  6E05               	movwf	___flmul@a^0,c
  1909  00113A  0E00               	movlw	0
  1910  00113C  6E06               	movwf	(___flmul@a+1)^0,c
  1911  00113E  0E00               	movlw	0
  1912  001140  6E07               	movwf	(___flmul@a+2)^0,c
  1913  001142  0E00               	movlw	0
  1914  001144  6E08               	movwf	(___flmul@a+3)^0,c
  1915  001146                     l1614:
  1916  001146  8E07               	bsf	(___flmul@a+2)^0,7,c
  1917  001148  EFAE  F008         	goto	l834
  1918  00114C                     l1616:
  1919  00114C  0E00               	movlw	0
  1920  00114E  6E05               	movwf	___flmul@a^0,c
  1921  001150  0E00               	movlw	0
  1922  001152  6E06               	movwf	(___flmul@a+1)^0,c
  1923  001154  0E00               	movlw	0
  1924  001156  6E07               	movwf	(___flmul@a+2)^0,c
  1925  001158  0E00               	movlw	0
  1926  00115A  6E08               	movwf	(___flmul@a+3)^0,c
  1927  00115C                     l834:
  1928  00115C  5012               	movf	___flmul@aexp^0,w,c
  1929  00115E  B4D8               	btfsc	status,2,c
  1930  001160  EFB4  F008         	goto	u491
  1931  001164  EFB6  F008         	goto	u490
  1932  001168                     u491:
  1933  001168  EFBE  F008         	goto	l1620
  1934  00116C                     u490:
  1935  00116C  5013               	movf	___flmul@bexp^0,w,c
  1936  00116E  A4D8               	btfss	status,2,c
  1937  001170  EFBC  F008         	goto	u501
  1938  001174  EFBE  F008         	goto	u500
  1939  001178                     u501:
  1940  001178  EFC8  F008         	goto	l1624
  1941  00117C                     u500:
  1942  00117C                     l1620:
  1943  00117C  0E00               	movlw	0
  1944  00117E  6E01               	movwf	?___flmul^0,c
  1945  001180  0E00               	movlw	0
  1946  001182  6E02               	movwf	(?___flmul+1)^0,c
  1947  001184  0E00               	movlw	0
  1948  001186  6E03               	movwf	(?___flmul+2)^0,c
  1949  001188  0E00               	movlw	0
  1950  00118A  6E04               	movwf	(?___flmul+3)^0,c
  1951  00118C  EF60  F00A         	goto	l838
  1952  001190                     l1624:
  1953  001190  5007               	movf	(___flmul@a+2)^0,w,c
  1954  001192  0201               	mulwf	___flmul@b^0,c
  1955  001194  CFF3 F018          	movff	prodl,___flmul@temp
  1956  001198  CFF4 F019          	movff	prodh,___flmul@temp+1
  1957  00119C  5018               	movf	___flmul@temp^0,w,c
  1958  00119E  6E0E               	movwf	___flmul@grs^0,c
  1959  0011A0  6A0F               	clrf	(___flmul@grs+1)^0,c
  1960  0011A2  6A10               	clrf	(___flmul@grs+2)^0,c
  1961  0011A4  6A11               	clrf	(___flmul@grs+3)^0,c
  1962  0011A6  5019               	movf	(___flmul@temp+1)^0,w,c
  1963  0011A8  6E14               	movwf	___flmul@prod^0,c
  1964  0011AA  6A15               	clrf	(___flmul@prod+1)^0,c
  1965  0011AC  6A16               	clrf	(___flmul@prod+2)^0,c
  1966  0011AE  6A17               	clrf	(___flmul@prod+3)^0,c
  1967  0011B0  5006               	movf	(___flmul@a+1)^0,w,c
  1968  0011B2  0202               	mulwf	(___flmul@b+1)^0,c
  1969  0011B4  CFF3 F018          	movff	prodl,___flmul@temp
  1970  0011B8  CFF4 F019          	movff	prodh,___flmul@temp+1
  1971  0011BC  5018               	movf	___flmul@temp^0,w,c
  1972  0011BE  260E               	addwf	___flmul@grs^0,f,c
  1973  0011C0  0E00               	movlw	0
  1974  0011C2  220F               	addwfc	(___flmul@grs+1)^0,f,c
  1975  0011C4  2210               	addwfc	(___flmul@grs+2)^0,f,c
  1976  0011C6  2211               	addwfc	(___flmul@grs+3)^0,f,c
  1977  0011C8  5019               	movf	(___flmul@temp+1)^0,w,c
  1978  0011CA  2614               	addwf	___flmul@prod^0,f,c
  1979  0011CC  0E00               	movlw	0
  1980  0011CE  2215               	addwfc	(___flmul@prod+1)^0,f,c
  1981  0011D0  2216               	addwfc	(___flmul@prod+2)^0,f,c
  1982  0011D2  2217               	addwfc	(___flmul@prod+3)^0,f,c
  1983  0011D4  5005               	movf	___flmul@a^0,w,c
  1984  0011D6  0203               	mulwf	(___flmul@b+2)^0,c
  1985  0011D8  CFF3 F018          	movff	prodl,___flmul@temp
  1986  0011DC  CFF4 F019          	movff	prodh,___flmul@temp+1
  1987  0011E0  5018               	movf	___flmul@temp^0,w,c
  1988  0011E2  260E               	addwf	___flmul@grs^0,f,c
  1989  0011E4  0E00               	movlw	0
  1990  0011E6  220F               	addwfc	(___flmul@grs+1)^0,f,c
  1991  0011E8  2210               	addwfc	(___flmul@grs+2)^0,f,c
  1992  0011EA  2211               	addwfc	(___flmul@grs+3)^0,f,c
  1993  0011EC  5019               	movf	(___flmul@temp+1)^0,w,c
  1994  0011EE  2614               	addwf	___flmul@prod^0,f,c
  1995  0011F0  0E00               	movlw	0
  1996  0011F2  2215               	addwfc	(___flmul@prod+1)^0,f,c
  1997  0011F4  2216               	addwfc	(___flmul@prod+2)^0,f,c
  1998  0011F6  2217               	addwfc	(___flmul@prod+3)^0,f,c
  1999  0011F8  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  2000  0011FC  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  2001  001200  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  2002  001204  6A0E               	clrf	___flmul@grs^0,c
  2003  001206  5005               	movf	___flmul@a^0,w,c
  2004  001208  0202               	mulwf	(___flmul@b+1)^0,c
  2005  00120A  CFF3 F018          	movff	prodl,___flmul@temp
  2006  00120E  CFF4 F019          	movff	prodh,___flmul@temp+1
  2007  001212  5018               	movf	___flmul@temp^0,w,c
  2008  001214  260E               	addwf	___flmul@grs^0,f,c
  2009  001216  5019               	movf	(___flmul@temp+1)^0,w,c
  2010  001218  220F               	addwfc	(___flmul@grs+1)^0,f,c
  2011  00121A  0E00               	movlw	0
  2012  00121C  2210               	addwfc	(___flmul@grs+2)^0,f,c
  2013  00121E  0E00               	movlw	0
  2014  001220  2211               	addwfc	(___flmul@grs+3)^0,f,c
  2015  001222  5006               	movf	(___flmul@a+1)^0,w,c
  2016  001224  0201               	mulwf	___flmul@b^0,c
  2017  001226  CFF3 F018          	movff	prodl,___flmul@temp
  2018  00122A  CFF4 F019          	movff	prodh,___flmul@temp+1
  2019  00122E  5018               	movf	___flmul@temp^0,w,c
  2020  001230  260E               	addwf	___flmul@grs^0,f,c
  2021  001232  5019               	movf	(___flmul@temp+1)^0,w,c
  2022  001234  220F               	addwfc	(___flmul@grs+1)^0,f,c
  2023  001236  0E00               	movlw	0
  2024  001238  2210               	addwfc	(___flmul@grs+2)^0,f,c
  2025  00123A  0E00               	movlw	0
  2026  00123C  2211               	addwfc	(___flmul@grs+3)^0,f,c
  2027  00123E  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  2028  001242  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  2029  001246  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  2030  00124A  6A0E               	clrf	___flmul@grs^0,c
  2031  00124C  5005               	movf	___flmul@a^0,w,c
  2032  00124E  0201               	mulwf	___flmul@b^0,c
  2033  001250  CFF3 F018          	movff	prodl,___flmul@temp
  2034  001254  CFF4 F019          	movff	prodh,___flmul@temp+1
  2035  001258  5018               	movf	___flmul@temp^0,w,c
  2036  00125A  260E               	addwf	___flmul@grs^0,f,c
  2037  00125C  5019               	movf	(___flmul@temp+1)^0,w,c
  2038  00125E  220F               	addwfc	(___flmul@grs+1)^0,f,c
  2039  001260  0E00               	movlw	0
  2040  001262  2210               	addwfc	(___flmul@grs+2)^0,f,c
  2041  001264  0E00               	movlw	0
  2042  001266  2211               	addwfc	(___flmul@grs+3)^0,f,c
  2043  001268  5007               	movf	(___flmul@a+2)^0,w,c
  2044  00126A  0202               	mulwf	(___flmul@b+1)^0,c
  2045  00126C  CFF3 F018          	movff	prodl,___flmul@temp
  2046  001270  CFF4 F019          	movff	prodh,___flmul@temp+1
  2047  001274  5018               	movf	___flmul@temp^0,w,c
  2048  001276  2614               	addwf	___flmul@prod^0,f,c
  2049  001278  5019               	movf	(___flmul@temp+1)^0,w,c
  2050  00127A  2215               	addwfc	(___flmul@prod+1)^0,f,c
  2051  00127C  0E00               	movlw	0
  2052  00127E  2216               	addwfc	(___flmul@prod+2)^0,f,c
  2053  001280  0E00               	movlw	0
  2054  001282  2217               	addwfc	(___flmul@prod+3)^0,f,c
  2055  001284  5006               	movf	(___flmul@a+1)^0,w,c
  2056  001286  0203               	mulwf	(___flmul@b+2)^0,c
  2057  001288  CFF3 F018          	movff	prodl,___flmul@temp
  2058  00128C  CFF4 F019          	movff	prodh,___flmul@temp+1
  2059  001290  5018               	movf	___flmul@temp^0,w,c
  2060  001292  2614               	addwf	___flmul@prod^0,f,c
  2061  001294  5019               	movf	(___flmul@temp+1)^0,w,c
  2062  001296  2215               	addwfc	(___flmul@prod+1)^0,f,c
  2063  001298  0E00               	movlw	0
  2064  00129A  2216               	addwfc	(___flmul@prod+2)^0,f,c
  2065  00129C  0E00               	movlw	0
  2066  00129E  2217               	addwfc	(___flmul@prod+3)^0,f,c
  2067  0012A0  5007               	movf	(___flmul@a+2)^0,w,c
  2068  0012A2  0203               	mulwf	(___flmul@b+2)^0,c
  2069  0012A4  CFF3 F018          	movff	prodl,___flmul@temp
  2070  0012A8  CFF4 F019          	movff	prodh,___flmul@temp+1
  2071  0012AC  5018               	movf	___flmul@temp^0,w,c
  2072  0012AE  6E09               	movwf	??___flmul^0,c
  2073  0012B0  5019               	movf	(___flmul@temp+1)^0,w,c
  2074  0012B2  6E0A               	movwf	(??___flmul+1)^0,c
  2075  0012B4  6A0B               	clrf	(??___flmul+2)^0,c
  2076  0012B6  6A0C               	clrf	(??___flmul+3)^0,c
  2077  0012B8  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  2078  0012BC  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  2079  0012C0  C009  F00A         	movff	??___flmul,??___flmul+1
  2080  0012C4  6A09               	clrf	??___flmul^0,c
  2081  0012C6  5009               	movf	??___flmul^0,w,c
  2082  0012C8  2614               	addwf	___flmul@prod^0,f,c
  2083  0012CA  500A               	movf	(??___flmul+1)^0,w,c
  2084  0012CC  2215               	addwfc	(___flmul@prod+1)^0,f,c
  2085  0012CE  500B               	movf	(??___flmul+2)^0,w,c
  2086  0012D0  2216               	addwfc	(___flmul@prod+2)^0,f,c
  2087  0012D2  500C               	movf	(??___flmul+3)^0,w,c
  2088  0012D4  2217               	addwfc	(___flmul@prod+3)^0,f,c
  2089  0012D6  C00E  F009         	movff	___flmul@grs,??___flmul
  2090  0012DA  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
  2091  0012DE  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
  2092  0012E2  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
  2093  0012E6  0E19               	movlw	25
  2094  0012E8  EF7B  F009         	goto	u510
  2095  0012EC                     u515:
  2096  0012EC  90D8               	bcf	status,0,c
  2097  0012EE  320C               	rrcf	(??___flmul+3)^0,f,c
  2098  0012F0  320B               	rrcf	(??___flmul+2)^0,f,c
  2099  0012F2  320A               	rrcf	(??___flmul+1)^0,f,c
  2100  0012F4  3209               	rrcf	??___flmul^0,f,c
  2101  0012F6                     u510:
  2102  0012F6  2EE8               	decfsz	wreg,f,c
  2103  0012F8  EF76  F009         	goto	u515
  2104  0012FC  5009               	movf	??___flmul^0,w,c
  2105  0012FE  2614               	addwf	___flmul@prod^0,f,c
  2106  001300  500A               	movf	(??___flmul+1)^0,w,c
  2107  001302  2215               	addwfc	(___flmul@prod+1)^0,f,c
  2108  001304  500B               	movf	(??___flmul+2)^0,w,c
  2109  001306  2216               	addwfc	(___flmul@prod+2)^0,f,c
  2110  001308  500C               	movf	(??___flmul+3)^0,w,c
  2111  00130A  2217               	addwfc	(___flmul@prod+3)^0,f,c
  2112  00130C  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  2113  001310  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  2114  001314  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  2115  001318  6A0E               	clrf	___flmul@grs^0,c
  2116  00131A  5012               	movf	___flmul@aexp^0,w,c
  2117  00131C  C013  F009         	movff	___flmul@bexp,??___flmul
  2118  001320  6A0A               	clrf	(??___flmul+1)^0,c
  2119  001322  2609               	addwf	??___flmul^0,f,c
  2120  001324  0E00               	movlw	0
  2121  001326  220A               	addwfc	(??___flmul+1)^0,f,c
  2122  001328  0E82               	movlw	130
  2123  00132A  2409               	addwf	??___flmul^0,w,c
  2124  00132C  6E18               	movwf	___flmul@temp^0,c
  2125  00132E  0EFF               	movlw	255
  2126  001330  200A               	addwfc	(??___flmul+1)^0,w,c
  2127  001332  6E19               	movwf	(___flmul@temp+1)^0,c
  2128  001334  EFB1  F009         	goto	l1672
  2129  001338                     l1666:
  2130  001338  90D8               	bcf	status,0,c
  2131  00133A  3614               	rlcf	___flmul@prod^0,f,c
  2132  00133C  3615               	rlcf	(___flmul@prod+1)^0,f,c
  2133  00133E  3616               	rlcf	(___flmul@prod+2)^0,f,c
  2134  001340  3617               	rlcf	(___flmul@prod+3)^0,f,c
  2135  001342  AE11               	btfss	(___flmul@grs+3)^0,7,c
  2136  001344  EFA6  F009         	goto	u521
  2137  001348  EFA8  F009         	goto	u520
  2138  00134C                     u521:
  2139  00134C  EFA9  F009         	goto	l841
  2140  001350                     u520:
  2141  001350  8014               	bsf	___flmul@prod^0,0,c
  2142  001352                     l841:
  2143  001352  90D8               	bcf	status,0,c
  2144  001354  360E               	rlcf	___flmul@grs^0,f,c
  2145  001356  360F               	rlcf	(___flmul@grs+1)^0,f,c
  2146  001358  3610               	rlcf	(___flmul@grs+2)^0,f,c
  2147  00135A  3611               	rlcf	(___flmul@grs+3)^0,f,c
  2148  00135C  0618               	decf	___flmul@temp^0,f,c
  2149  00135E  A0D8               	btfss	status,0,c
  2150  001360  0619               	decf	(___flmul@temp+1)^0,f,c
  2151  001362                     l1672:
  2152  001362  AE16               	btfss	(___flmul@prod+2)^0,7,c
  2153  001364  EFB6  F009         	goto	u531
  2154  001368  EFB8  F009         	goto	u530
  2155  00136C                     u531:
  2156  00136C  EF9C  F009         	goto	l1666
  2157  001370                     u530:
  2158  001370  0E00               	movlw	0
  2159  001372  6E12               	movwf	___flmul@aexp^0,c
  2160  001374  AE11               	btfss	(___flmul@grs+3)^0,7,c
  2161  001376  EFBF  F009         	goto	u541
  2162  00137A  EFC1  F009         	goto	u540
  2163  00137E                     u541:
  2164  00137E  EFE5  F009         	goto	l843
  2165  001382                     u540:
  2166  001382  0EFF               	movlw	255
  2167  001384  140E               	andwf	___flmul@grs^0,w,c
  2168  001386  6E09               	movwf	??___flmul^0,c
  2169  001388  0EFF               	movlw	255
  2170  00138A  140F               	andwf	(___flmul@grs+1)^0,w,c
  2171  00138C  6E0A               	movwf	(??___flmul+1)^0,c
  2172  00138E  0EFF               	movlw	255
  2173  001390  1410               	andwf	(___flmul@grs+2)^0,w,c
  2174  001392  6E0B               	movwf	(??___flmul+2)^0,c
  2175  001394  0E7F               	movlw	127
  2176  001396  1411               	andwf	(___flmul@grs+3)^0,w,c
  2177  001398  6E0C               	movwf	(??___flmul+3)^0,c
  2178  00139A  5009               	movf	??___flmul^0,w,c
  2179  00139C  100A               	iorwf	(??___flmul+1)^0,w,c
  2180  00139E  100B               	iorwf	(??___flmul+2)^0,w,c
  2181  0013A0  100C               	iorwf	(??___flmul+3)^0,w,c
  2182  0013A2  B4D8               	btfsc	status,2,c
  2183  0013A4  EFD6  F009         	goto	u551
  2184  0013A8  EFD8  F009         	goto	u550
  2185  0013AC                     u551:
  2186  0013AC  EFDC  F009         	goto	l844
  2187  0013B0                     u550:
  2188  0013B0                     l1680:
  2189  0013B0  0E01               	movlw	1
  2190  0013B2  6E12               	movwf	___flmul@aexp^0,c
  2191  0013B4  EFE5  F009         	goto	l843
  2192  0013B8                     l844:
  2193  0013B8  A014               	btfss	___flmul@prod^0,0,c
  2194  0013BA  EFE1  F009         	goto	u561
  2195  0013BE  EFE3  F009         	goto	u560
  2196  0013C2                     u561:
  2197  0013C2  EFE5  F009         	goto	l843
  2198  0013C6                     u560:
  2199  0013C6  EFD8  F009         	goto	l1680
  2200  0013CA                     l843:
  2201  0013CA  5012               	movf	___flmul@aexp^0,w,c
  2202  0013CC  B4D8               	btfsc	status,2,c
  2203  0013CE  EFEB  F009         	goto	u571
  2204  0013D2  EFED  F009         	goto	u570
  2205  0013D6                     u571:
  2206  0013D6  EF11  F00A         	goto	l1692
  2207  0013DA                     u570:
  2208  0013DA  0E01               	movlw	1
  2209  0013DC  2614               	addwf	___flmul@prod^0,f,c
  2210  0013DE  0E00               	movlw	0
  2211  0013E0  2215               	addwfc	(___flmul@prod+1)^0,f,c
  2212  0013E2  2216               	addwfc	(___flmul@prod+2)^0,f,c
  2213  0013E4  2217               	addwfc	(___flmul@prod+3)^0,f,c
  2214  0013E6  A017               	btfss	(___flmul@prod+3)^0,0,c
  2215  0013E8  EFF8  F009         	goto	u581
  2216  0013EC  EFFA  F009         	goto	u580
  2217  0013F0                     u581:
  2218  0013F0  EF11  F00A         	goto	l1692
  2219  0013F4                     u580:
  2220  0013F4  C014  F009         	movff	___flmul@prod,??___flmul
  2221  0013F8  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  2222  0013FC  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  2223  001400  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  2224  001404  340C               	rlcf	(??___flmul+3)^0,w,c
  2225  001406  320C               	rrcf	(??___flmul+3)^0,f,c
  2226  001408  320B               	rrcf	(??___flmul+2)^0,f,c
  2227  00140A  320A               	rrcf	(??___flmul+1)^0,f,c
  2228  00140C  3209               	rrcf	??___flmul^0,f,c
  2229  00140E  C009  F014         	movff	??___flmul,___flmul@prod
  2230  001412  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  2231  001416  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  2232  00141A  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  2233  00141E  4A18               	infsnz	___flmul@temp^0,f,c
  2234  001420  2A19               	incf	(___flmul@temp+1)^0,f,c
  2235  001422                     l1692:
  2236  001422  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  2237  001424  EF1C  F00A         	goto	u591
  2238  001428  5019               	movf	(___flmul@temp+1)^0,w,c
  2239  00142A  E108               	bnz	u590
  2240  00142C  2818               	incf	___flmul@temp^0,w,c
  2241  00142E  A0D8               	btfss	status,0,c
  2242  001430  EF1C  F00A         	goto	u591
  2243  001434  EF1E  F00A         	goto	u590
  2244  001438                     u591:
  2245  001438  EF28  F00A         	goto	l1696
  2246  00143C                     u590:
  2247  00143C  0E00               	movlw	0
  2248  00143E  6E14               	movwf	___flmul@prod^0,c
  2249  001440  0E00               	movlw	0
  2250  001442  6E15               	movwf	(___flmul@prod+1)^0,c
  2251  001444  0E80               	movlw	128
  2252  001446  6E16               	movwf	(___flmul@prod+2)^0,c
  2253  001448  0E7F               	movlw	127
  2254  00144A  6E17               	movwf	(___flmul@prod+3)^0,c
  2255  00144C  EF56  F00A         	goto	l1708
  2256  001450                     l1696:
  2257  001450  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  2258  001452  EF35  F00A         	goto	u600
  2259  001456  5019               	movf	(___flmul@temp+1)^0,w,c
  2260  001458  E106               	bnz	u601
  2261  00145A  0418               	decf	___flmul@temp^0,w,c
  2262  00145C  B0D8               	btfsc	status,0,c
  2263  00145E  EF33  F00A         	goto	u601
  2264  001462  EF35  F00A         	goto	u600
  2265  001466                     u601:
  2266  001466  EF41  F00A         	goto	l851
  2267  00146A                     u600:
  2268  00146A  0E00               	movlw	0
  2269  00146C  6E14               	movwf	___flmul@prod^0,c
  2270  00146E  0E00               	movlw	0
  2271  001470  6E15               	movwf	(___flmul@prod+1)^0,c
  2272  001472  0E00               	movlw	0
  2273  001474  6E16               	movwf	(___flmul@prod+2)^0,c
  2274  001476  0E00               	movlw	0
  2275  001478  6E17               	movwf	(___flmul@prod+3)^0,c
  2276  00147A  0E00               	movlw	0
  2277  00147C  6E0D               	movwf	___flmul@sign^0,c
  2278  00147E  EF56  F00A         	goto	l1708
  2279  001482                     l851:
  2280  001482  C018  F013         	movff	___flmul@temp,___flmul@bexp
  2281  001486  0EFF               	movlw	255
  2282  001488  1614               	andwf	___flmul@prod^0,f,c
  2283  00148A  0EFF               	movlw	255
  2284  00148C  1615               	andwf	(___flmul@prod+1)^0,f,c
  2285  00148E  0E7F               	movlw	127
  2286  001490  1616               	andwf	(___flmul@prod+2)^0,f,c
  2287  001492  0E00               	movlw	0
  2288  001494  1617               	andwf	(___flmul@prod+3)^0,f,c
  2289  001496  A013               	btfss	___flmul@bexp^0,0,c
  2290  001498  EF50  F00A         	goto	u611
  2291  00149C  EF52  F00A         	goto	u610
  2292  0014A0                     u611:
  2293  0014A0  EF53  F00A         	goto	l1706
  2294  0014A4                     u610:
  2295  0014A4  8E16               	bsf	(___flmul@prod+2)^0,7,c
  2296  0014A6                     l1706:
  2297  0014A6  90D8               	bcf	status,0,c
  2298  0014A8  3013               	rrcf	___flmul@bexp^0,w,c
  2299  0014AA  6E17               	movwf	(___flmul@prod+3)^0,c
  2300  0014AC                     l1708:
  2301  0014AC  500D               	movf	___flmul@sign^0,w,c
  2302  0014AE  1217               	iorwf	(___flmul@prod+3)^0,f,c
  2303  0014B0  C014  F001         	movff	___flmul@prod,?___flmul
  2304  0014B4  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  2305  0014B8  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  2306  0014BC  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  2307  0014C0                     l838:
  2308  0014C0  0012               	return		;funcret
  2309  0014C2                     __end_of___flmul:
  2310                           	callstack 0
  2311                           
  2312 ;; *************** function _LoRaOptimalLoad *****************
  2313 ;; Defined at:
  2314 ;;		line 273 in file "LoRa.c"
  2315 ;; Parameters:    Size  Location     Type
  2316 ;;  syncWord        1    wreg     unsigned char 
  2317 ;; Auto vars:     Size  Location     Type
  2318 ;;  syncWord        1    5[COMRAM] unsigned char 
  2319 ;; Return value:  Size  Location     Type
  2320 ;;                  1    wreg      void 
  2321 ;; Registers used:
  2322 ;;		wreg, status,2, status,0, cstack
  2323 ;; Tracked objects:
  2324 ;;		On entry : 0/0
  2325 ;;		On exit  : 0/0
  2326 ;;		Unchanged: 0/0
  2327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2329 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2330 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2331 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2332 ;;Total ram usage:        2 bytes
  2333 ;; Hardware stack levels used: 1
  2334 ;; Hardware stack levels required when called: 3
  2335 ;; This function calls:
  2336 ;;		_LoRaSleepMode
  2337 ;;		_LoRaStandbyMode
  2338 ;;		_SPI2WriteByte
  2339 ;;		_setLoRaMode
  2340 ;; This function is called by:
  2341 ;;		_LoRaStart
  2342 ;; This function uses a non-reentrant model
  2343 ;;
  2344                           
  2345                           	psect	text9
  2346  0014C2                     __ptext9:
  2347                           	callstack 0
  2348  0014C2                     _LoRaOptimalLoad:
  2349                           	callstack 26
  2350                           
  2351                           ;incstack = 0
  2352                           ;LoRaOptimalLoad@syncWord stored from wreg
  2353  0014C2  6E06               	movwf	LoRaOptimalLoad@syncWord^0,c
  2354  0014C4                     
  2355                           ;LoRa.c: 274: LoRaSleepMode();
  2356  0014C4  EC38  F00E         	call	_LoRaSleepMode	;wreg free
  2357                           
  2358                           ;LoRa.c: 275: setLoRaMode();
  2359  0014C8  EC2E  F00E         	call	_setLoRaMode	;wreg free
  2360                           
  2361                           ;LoRa.c: 276: LoRaStandbyMode();
  2362  0014CC  EC21  F00E         	call	_LoRaStandbyMode	;wreg free
  2363  0014D0                     
  2364                           ;LoRa.c: 277: _delay((unsigned long)((10)*(16000000/4000.0)));
  2365  0014D0  0E34               	movlw	52
  2366  0014D2  6E05               	movwf	??_LoRaOptimalLoad^0,c
  2367  0014D4  0EF2               	movlw	242
  2368  0014D6                     u867:
  2369  0014D6  2EE8               	decfsz	wreg,f,c
  2370  0014D8  D7FE               	bra	u867
  2371  0014DA  2E05               	decfsz	??_LoRaOptimalLoad^0,f,c
  2372  0014DC  D7FC               	bra	u867
  2373  0014DE                     
  2374                           ;LoRa.c: 278: SPI2WriteByte(0x06, 0xD9);
  2375  0014DE  0ED9               	movlw	217
  2376  0014E0  6E01               	movwf	SPI2WriteByte@data^0,c
  2377  0014E2  0E06               	movlw	6
  2378  0014E4  ECC8  F00D         	call	_SPI2WriteByte
  2379  0014E8                     
  2380                           ;LoRa.c: 279: SPI2WriteByte(0x07, 0);
  2381  0014E8  0E00               	movlw	0
  2382  0014EA  6E01               	movwf	SPI2WriteByte@data^0,c
  2383  0014EC  0E07               	movlw	7
  2384  0014EE  ECC8  F00D         	call	_SPI2WriteByte
  2385  0014F2                     
  2386                           ;LoRa.c: 280: SPI2WriteByte(0x08, 0);
  2387  0014F2  0E00               	movlw	0
  2388  0014F4  6E01               	movwf	SPI2WriteByte@data^0,c
  2389  0014F6  0E08               	movlw	8
  2390  0014F8  ECC8  F00D         	call	_SPI2WriteByte
  2391  0014FC                     
  2392                           ;LoRa.c: 281: SPI2WriteByte(0x09, 0x8F);
  2393  0014FC  0E8F               	movlw	143
  2394  0014FE  6E01               	movwf	SPI2WriteByte@data^0,c
  2395  001500  0E09               	movlw	9
  2396  001502  ECC8  F00D         	call	_SPI2WriteByte
  2397  001506                     
  2398                           ;LoRa.c: 282: SPI2WriteByte(0x0A, 0x09);
  2399  001506  0E09               	movlw	9
  2400  001508  6E01               	movwf	SPI2WriteByte@data^0,c
  2401  00150A  0E0A               	movlw	10
  2402  00150C  ECC8  F00D         	call	_SPI2WriteByte
  2403  001510                     
  2404                           ;LoRa.c: 283: SPI2WriteByte(0x0B, 0x2B);
  2405  001510  0E2B               	movlw	43
  2406  001512  6E01               	movwf	SPI2WriteByte@data^0,c
  2407  001514  0E0B               	movlw	11
  2408  001516  ECC8  F00D         	call	_SPI2WriteByte
  2409  00151A                     
  2410                           ;LoRa.c: 284: SPI2WriteByte(0x0C, 0x23);
  2411  00151A  0E23               	movlw	35
  2412  00151C  6E01               	movwf	SPI2WriteByte@data^0,c
  2413  00151E  0E0C               	movlw	12
  2414  001520  ECC8  F00D         	call	_SPI2WriteByte
  2415  001524                     
  2416                           ;LoRa.c: 285: SPI2WriteByte(0x0E, 0);
  2417  001524  0E00               	movlw	0
  2418  001526  6E01               	movwf	SPI2WriteByte@data^0,c
  2419  001528  0E0E               	movlw	14
  2420  00152A  ECC8  F00D         	call	_SPI2WriteByte
  2421  00152E                     
  2422                           ;LoRa.c: 286: SPI2WriteByte(0x0F, 0);
  2423  00152E  0E00               	movlw	0
  2424  001530  6E01               	movwf	SPI2WriteByte@data^0,c
  2425  001532  0E0F               	movlw	15
  2426  001534  ECC8  F00D         	call	_SPI2WriteByte
  2427  001538                     
  2428                           ;LoRa.c: 287: SPI2WriteByte(0x10, 0);
  2429  001538  0E00               	movlw	0
  2430  00153A  6E01               	movwf	SPI2WriteByte@data^0,c
  2431  00153C  0E10               	movlw	16
  2432  00153E  ECC8  F00D         	call	_SPI2WriteByte
  2433  001542                     
  2434                           ;LoRa.c: 288: SPI2WriteByte(0x11, 0);
  2435  001542  0E00               	movlw	0
  2436  001544  6E01               	movwf	SPI2WriteByte@data^0,c
  2437  001546  0E11               	movlw	17
  2438  001548  ECC8  F00D         	call	_SPI2WriteByte
  2439  00154C                     
  2440                           ;LoRa.c: 289: SPI2WriteByte(0x13, 0);
  2441  00154C  0E00               	movlw	0
  2442  00154E  6E01               	movwf	SPI2WriteByte@data^0,c
  2443  001550  0E13               	movlw	19
  2444  001552  ECC8  F00D         	call	_SPI2WriteByte
  2445  001556                     
  2446                           ;LoRa.c: 290: SPI2WriteByte(0x1D, 0x72);
  2447  001556  0E72               	movlw	114
  2448  001558  6E01               	movwf	SPI2WriteByte@data^0,c
  2449  00155A  0E1D               	movlw	29
  2450  00155C  ECC8  F00D         	call	_SPI2WriteByte
  2451  001560                     
  2452                           ;LoRa.c: 291: SPI2WriteByte(0x1E, 0x70);
  2453  001560  0E70               	movlw	112
  2454  001562  6E01               	movwf	SPI2WriteByte@data^0,c
  2455  001564  0E1E               	movlw	30
  2456  001566  ECC8  F00D         	call	_SPI2WriteByte
  2457  00156A                     
  2458                           ;LoRa.c: 292: SPI2WriteByte(0x1F, 0x64);
  2459  00156A  0E64               	movlw	100
  2460  00156C  6E01               	movwf	SPI2WriteByte@data^0,c
  2461  00156E  0E1F               	movlw	31
  2462  001570  ECC8  F00D         	call	_SPI2WriteByte
  2463  001574                     
  2464                           ;LoRa.c: 293: SPI2WriteByte(0x20, 0);
  2465  001574  0E00               	movlw	0
  2466  001576  6E01               	movwf	SPI2WriteByte@data^0,c
  2467  001578  0E20               	movlw	32
  2468  00157A  ECC8  F00D         	call	_SPI2WriteByte
  2469  00157E                     
  2470                           ;LoRa.c: 294: SPI2WriteByte(0x21, 0x08);
  2471  00157E  0E08               	movlw	8
  2472  001580  6E01               	movwf	SPI2WriteByte@data^0,c
  2473  001582  0E21               	movlw	33
  2474  001584  ECC8  F00D         	call	_SPI2WriteByte
  2475  001588                     
  2476                           ;LoRa.c: 295: SPI2WriteByte(0x23, 0xFF);
  2477  001588  0EFF               	movlw	255
  2478  00158A  6E01               	movwf	SPI2WriteByte@data^0,c
  2479  00158C  0E23               	movlw	35
  2480  00158E  ECC8  F00D         	call	_SPI2WriteByte
  2481  001592                     
  2482                           ;LoRa.c: 296: SPI2WriteByte(0x24, 0);
  2483  001592  0E00               	movlw	0
  2484  001594  6E01               	movwf	SPI2WriteByte@data^0,c
  2485  001596  0E24               	movlw	36
  2486  001598  ECC8  F00D         	call	_SPI2WriteByte
  2487  00159C                     
  2488                           ;LoRa.c: 297: SPI2WriteByte(0x25, 0);
  2489  00159C  0E00               	movlw	0
  2490  00159E  6E01               	movwf	SPI2WriteByte@data^0,c
  2491  0015A0  0E25               	movlw	37
  2492  0015A2  ECC8  F00D         	call	_SPI2WriteByte
  2493  0015A6                     
  2494                           ;LoRa.c: 298: SPI2WriteByte(0x26, 0x04);
  2495  0015A6  0E04               	movlw	4
  2496  0015A8  6E01               	movwf	SPI2WriteByte@data^0,c
  2497  0015AA  0E26               	movlw	38
  2498  0015AC  ECC8  F00D         	call	_SPI2WriteByte
  2499  0015B0                     
  2500                           ;LoRa.c: 299: SPI2WriteByte(0x2F, 0x45);
  2501  0015B0  0E45               	movlw	69
  2502  0015B2  6E01               	movwf	SPI2WriteByte@data^0,c
  2503  0015B4  0E2F               	movlw	47
  2504  0015B6  ECC8  F00D         	call	_SPI2WriteByte
  2505  0015BA                     
  2506                           ;LoRa.c: 300: SPI2WriteByte(0x30, 0x55);
  2507  0015BA  0E55               	movlw	85
  2508  0015BC  6E01               	movwf	SPI2WriteByte@data^0,c
  2509  0015BE  0E30               	movlw	48
  2510  0015C0  ECC8  F00D         	call	_SPI2WriteByte
  2511  0015C4                     
  2512                           ;LoRa.c: 301: SPI2WriteByte(0x31, 0xC3);
  2513  0015C4  0EC3               	movlw	195
  2514  0015C6  6E01               	movwf	SPI2WriteByte@data^0,c
  2515  0015C8  0E31               	movlw	49
  2516  0015CA  ECC8  F00D         	call	_SPI2WriteByte
  2517  0015CE                     
  2518                           ;LoRa.c: 302: SPI2WriteByte(0x33, 0x27);
  2519  0015CE  0E27               	movlw	39
  2520  0015D0  6E01               	movwf	SPI2WriteByte@data^0,c
  2521  0015D2  0E33               	movlw	51
  2522  0015D4  ECC8  F00D         	call	_SPI2WriteByte
  2523  0015D8                     
  2524                           ;LoRa.c: 303: SPI2WriteByte(0x36, 0x03);
  2525  0015D8  0E03               	movlw	3
  2526  0015DA  6E01               	movwf	SPI2WriteByte@data^0,c
  2527  0015DC  0E36               	movlw	54
  2528  0015DE  ECC8  F00D         	call	_SPI2WriteByte
  2529  0015E2                     
  2530                           ;LoRa.c: 304: SPI2WriteByte(0x37, 0x0A);
  2531  0015E2  0E0A               	movlw	10
  2532  0015E4  6E01               	movwf	SPI2WriteByte@data^0,c
  2533  0015E6  0E37               	movlw	55
  2534  0015E8  ECC8  F00D         	call	_SPI2WriteByte
  2535  0015EC                     
  2536                           ;LoRa.c: 305: SPI2WriteByte(0x39, syncWord);
  2537  0015EC  C006  F001         	movff	LoRaOptimalLoad@syncWord,SPI2WriteByte@data
  2538  0015F0  0E39               	movlw	57
  2539  0015F2  ECC8  F00D         	call	_SPI2WriteByte
  2540  0015F6                     
  2541                           ;LoRa.c: 306: SPI2WriteByte(0x3A, 0x49);
  2542  0015F6  0E49               	movlw	73
  2543  0015F8  6E01               	movwf	SPI2WriteByte@data^0,c
  2544  0015FA  0E3A               	movlw	58
  2545  0015FC  ECC8  F00D         	call	_SPI2WriteByte
  2546  001600                     
  2547                           ;LoRa.c: 307: SPI2WriteByte(0x4B, 0x09);
  2548  001600  0E09               	movlw	9
  2549  001602  6E01               	movwf	SPI2WriteByte@data^0,c
  2550  001604  0E4B               	movlw	75
  2551  001606  ECC8  F00D         	call	_SPI2WriteByte
  2552  00160A                     
  2553                           ;LoRa.c: 308: SPI2WriteByte(0x4D, 0x84);
  2554  00160A  0E84               	movlw	132
  2555  00160C  6E01               	movwf	SPI2WriteByte@data^0,c
  2556  00160E  0E4D               	movlw	77
  2557  001610  ECC8  F00D         	call	_SPI2WriteByte
  2558  001614                     
  2559                           ;LoRa.c: 309: SPI2WriteByte(0x61, 0x1C);
  2560  001614  0E1C               	movlw	28
  2561  001616  6E01               	movwf	SPI2WriteByte@data^0,c
  2562  001618  0E61               	movlw	97
  2563  00161A  ECC8  F00D         	call	_SPI2WriteByte
  2564  00161E                     
  2565                           ;LoRa.c: 310: SPI2WriteByte(0x62, 0x0E);
  2566  00161E  0E0E               	movlw	14
  2567  001620  6E01               	movwf	SPI2WriteByte@data^0,c
  2568  001622  0E62               	movlw	98
  2569  001624  ECC8  F00D         	call	_SPI2WriteByte
  2570  001628                     
  2571                           ;LoRa.c: 311: SPI2WriteByte(0x63, 0x5B);
  2572  001628  0E5B               	movlw	91
  2573  00162A  6E01               	movwf	SPI2WriteByte@data^0,c
  2574  00162C  0E63               	movlw	99
  2575  00162E  ECC8  F00D         	call	_SPI2WriteByte
  2576  001632                     
  2577                           ;LoRa.c: 312: SPI2WriteByte(0x64, 0xCC);
  2578  001632  0ECC               	movlw	204
  2579  001634  6E01               	movwf	SPI2WriteByte@data^0,c
  2580  001636  0E64               	movlw	100
  2581  001638  ECC8  F00D         	call	_SPI2WriteByte
  2582  00163C                     
  2583                           ;LoRa.c: 313: SPI2WriteByte(0x70, 0xD0);
  2584  00163C  0ED0               	movlw	208
  2585  00163E  6E01               	movwf	SPI2WriteByte@data^0,c
  2586  001640  0E70               	movlw	112
  2587  001642  ECC8  F00D         	call	_SPI2WriteByte
  2588  001646  0012               	return		;funcret
  2589  001648                     __end_of_LoRaOptimalLoad:
  2590                           	callstack 0
  2591                           
  2592 ;; *************** function _setLoRaMode *****************
  2593 ;; Defined at:
  2594 ;;		line 77 in file "LoRa.c"
  2595 ;; Parameters:    Size  Location     Type
  2596 ;;		None
  2597 ;; Auto vars:     Size  Location     Type
  2598 ;;  regValue        1    3[COMRAM] unsigned char 
  2599 ;; Return value:  Size  Location     Type
  2600 ;;                  1    wreg      void 
  2601 ;; Registers used:
  2602 ;;		wreg, status,2, status,0, cstack
  2603 ;; Tracked objects:
  2604 ;;		On entry : 0/0
  2605 ;;		On exit  : 0/0
  2606 ;;		Unchanged: 0/0
  2607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2609 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2611 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2612 ;;Total ram usage:        1 bytes
  2613 ;; Hardware stack levels used: 1
  2614 ;; Hardware stack levels required when called: 2
  2615 ;; This function calls:
  2616 ;;		_readOpModeRegister
  2617 ;;		_writeOpModeRegister
  2618 ;; This function is called by:
  2619 ;;		_LoRaStart
  2620 ;;		_LoRaOptimalLoad
  2621 ;; This function uses a non-reentrant model
  2622 ;;
  2623                           
  2624                           	psect	text10
  2625  001C5C                     __ptext10:
  2626                           	callstack 0
  2627  001C5C                     _setLoRaMode:
  2628                           	callstack 27
  2629  001C5C                     
  2630                           ;LoRa.c: 79: uint8_t regValue = readOpModeRegister();
  2631  001C5C  EC4E  F00E         	call	_readOpModeRegister	;wreg free
  2632  001C60  6E04               	movwf	setLoRaMode@regValue^0,c
  2633  001C62                     
  2634                           ;LoRa.c: 80: regValue = regValue | 0b10000000;
  2635  001C62  5004               	movf	setLoRaMode@regValue^0,w,c
  2636  001C64  0980               	iorlw	128
  2637  001C66  6E04               	movwf	setLoRaMode@regValue^0,c
  2638  001C68                     
  2639                           ;LoRa.c: 81: writeOpModeRegister(regValue);
  2640  001C68  5004               	movf	setLoRaMode@regValue^0,w,c
  2641  001C6A  EC42  F00E         	call	_writeOpModeRegister
  2642  001C6E  0012               	return		;funcret
  2643  001C70                     __end_of_setLoRaMode:
  2644                           	callstack 0
  2645                           
  2646 ;; *************** function _LoRaStandbyMode *****************
  2647 ;; Defined at:
  2648 ;;		line 175 in file "LoRa.c"
  2649 ;; Parameters:    Size  Location     Type
  2650 ;;		None
  2651 ;; Auto vars:     Size  Location     Type
  2652 ;;  regValue        1    3[COMRAM] unsigned char 
  2653 ;; Return value:  Size  Location     Type
  2654 ;;                  1    wreg      void 
  2655 ;; Registers used:
  2656 ;;		wreg, status,2, status,0, cstack
  2657 ;; Tracked objects:
  2658 ;;		On entry : 0/0
  2659 ;;		On exit  : 0/0
  2660 ;;		Unchanged: 0/0
  2661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2663 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2665 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2666 ;;Total ram usage:        1 bytes
  2667 ;; Hardware stack levels used: 1
  2668 ;; Hardware stack levels required when called: 2
  2669 ;; This function calls:
  2670 ;;		_readOpModeRegister
  2671 ;;		_writeOpModeRegister
  2672 ;; This function is called by:
  2673 ;;		_LoRaOptimalLoad
  2674 ;;		_LoRaTXData
  2675 ;; This function uses a non-reentrant model
  2676 ;;
  2677                           
  2678                           	psect	text11
  2679  001C42                     __ptext11:
  2680                           	callstack 0
  2681  001C42                     _LoRaStandbyMode:
  2682                           	callstack 26
  2683  001C42                     
  2684                           ;LoRa.c: 176: uint8_t regValue = readOpModeRegister();
  2685  001C42  EC4E  F00E         	call	_readOpModeRegister	;wreg free
  2686  001C46  6E04               	movwf	LoRaStandbyMode@regValue^0,c
  2687  001C48                     
  2688                           ;LoRa.c: 177: regValue = regValue & 0b11111000;
  2689  001C48  5004               	movf	LoRaStandbyMode@regValue^0,w,c
  2690  001C4A  0BF8               	andlw	248
  2691  001C4C  6E04               	movwf	LoRaStandbyMode@regValue^0,c
  2692  001C4E                     
  2693                           ;LoRa.c: 178: regValue = regValue | 0b00000001;
  2694  001C4E  5004               	movf	LoRaStandbyMode@regValue^0,w,c
  2695  001C50  0901               	iorlw	1
  2696  001C52  6E04               	movwf	LoRaStandbyMode@regValue^0,c
  2697  001C54                     
  2698                           ;LoRa.c: 179: writeOpModeRegister(regValue);
  2699  001C54  5004               	movf	LoRaStandbyMode@regValue^0,w,c
  2700  001C56  EC42  F00E         	call	_writeOpModeRegister
  2701  001C5A  0012               	return		;funcret
  2702  001C5C                     __end_of_LoRaStandbyMode:
  2703                           	callstack 0
  2704                           
  2705 ;; *************** function _LoRaSleepMode *****************
  2706 ;; Defined at:
  2707 ;;		line 182 in file "LoRa.c"
  2708 ;; Parameters:    Size  Location     Type
  2709 ;;		None
  2710 ;; Auto vars:     Size  Location     Type
  2711 ;;  regValue        1    3[COMRAM] unsigned char 
  2712 ;; Return value:  Size  Location     Type
  2713 ;;                  1    wreg      void 
  2714 ;; Registers used:
  2715 ;;		wreg, status,2, status,0, cstack
  2716 ;; Tracked objects:
  2717 ;;		On entry : 0/0
  2718 ;;		On exit  : 0/0
  2719 ;;		Unchanged: 0/0
  2720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2722 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2724 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2725 ;;Total ram usage:        1 bytes
  2726 ;; Hardware stack levels used: 1
  2727 ;; Hardware stack levels required when called: 2
  2728 ;; This function calls:
  2729 ;;		_readOpModeRegister
  2730 ;;		_writeOpModeRegister
  2731 ;; This function is called by:
  2732 ;;		_main
  2733 ;;		_LoRaOptimalLoad
  2734 ;; This function uses a non-reentrant model
  2735 ;;
  2736                           
  2737                           	psect	text12
  2738  001C70                     __ptext12:
  2739                           	callstack 0
  2740  001C70                     _LoRaSleepMode:
  2741                           	callstack 26
  2742  001C70                     
  2743                           ;LoRa.c: 183: uint8_t regValue = readOpModeRegister();
  2744  001C70  EC4E  F00E         	call	_readOpModeRegister	;wreg free
  2745  001C74  6E04               	movwf	LoRaSleepMode@regValue^0,c
  2746  001C76                     
  2747                           ;LoRa.c: 185: regValue = regValue | 0b00000000;
  2748  001C76  5004               	movf	LoRaSleepMode@regValue^0,w,c
  2749  001C78  0BF8               	andlw	248
  2750  001C7A  6E04               	movwf	LoRaSleepMode@regValue^0,c
  2751  001C7C                     
  2752                           ;LoRa.c: 186: writeOpModeRegister(regValue);
  2753  001C7C  5004               	movf	LoRaSleepMode@regValue^0,w,c
  2754  001C7E  EC42  F00E         	call	_writeOpModeRegister
  2755  001C82  0012               	return		;funcret
  2756  001C84                     __end_of_LoRaSleepMode:
  2757                           	callstack 0
  2758                           
  2759 ;; *************** function _writeOpModeRegister *****************
  2760 ;; Defined at:
  2761 ;;		line 88 in file "LoRa.c"
  2762 ;; Parameters:    Size  Location     Type
  2763 ;;  regValue        1    wreg     unsigned char 
  2764 ;; Auto vars:     Size  Location     Type
  2765 ;;  regValue        1    2[COMRAM] unsigned char 
  2766 ;; Return value:  Size  Location     Type
  2767 ;;                  1    wreg      void 
  2768 ;; Registers used:
  2769 ;;		wreg, status,2, status,0, cstack
  2770 ;; Tracked objects:
  2771 ;;		On entry : 0/0
  2772 ;;		On exit  : 0/0
  2773 ;;		Unchanged: 0/0
  2774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2776 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2778 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2779 ;;Total ram usage:        1 bytes
  2780 ;; Hardware stack levels used: 1
  2781 ;; Hardware stack levels required when called: 1
  2782 ;; This function calls:
  2783 ;;		_SPI2WriteByte
  2784 ;; This function is called by:
  2785 ;;		_setLoRaMode
  2786 ;;		_LoRaStandbyMode
  2787 ;;		_LoRaSleepMode
  2788 ;;		_LoRaFreqSynthRXMode
  2789 ;;		_LoRaFreqSynthTXMode
  2790 ;;		_LoRaTXMode
  2791 ;;		_LoRaRXContinuousMode
  2792 ;; This function uses a non-reentrant model
  2793 ;;
  2794                           
  2795                           	psect	text13
  2796  001C84                     __ptext13:
  2797                           	callstack 0
  2798  001C84                     _writeOpModeRegister:
  2799                           	callstack 27
  2800                           
  2801                           ;incstack = 0
  2802                           ;writeOpModeRegister@regValue stored from wreg
  2803  001C84  6E03               	movwf	writeOpModeRegister@regValue^0,c
  2804  001C86                     
  2805                           ;LoRa.c: 89: SPI2WriteByte(0x01, regValue);
  2806  001C86  C003  F001         	movff	writeOpModeRegister@regValue,SPI2WriteByte@data
  2807  001C8A  0E01               	movlw	1
  2808  001C8C  ECC8  F00D         	call	_SPI2WriteByte
  2809  001C90  0012               	return		;funcret
  2810  001C92                     __end_of_writeOpModeRegister:
  2811                           	callstack 0
  2812                           
  2813 ;; *************** function _SPI2WriteByte *****************
  2814 ;; Defined at:
  2815 ;;		line 104 in file "LoRa.c"
  2816 ;; Parameters:    Size  Location     Type
  2817 ;;  address         1    wreg     unsigned char 
  2818 ;;  data            1    0[COMRAM] unsigned char 
  2819 ;; Auto vars:     Size  Location     Type
  2820 ;;  address         1    1[COMRAM] unsigned char 
  2821 ;;  dataByte        1    0        unsigned char 
  2822 ;; Return value:  Size  Location     Type
  2823 ;;                  1    wreg      void 
  2824 ;; Registers used:
  2825 ;;		wreg, status,2, status,0
  2826 ;; Tracked objects:
  2827 ;;		On entry : 0/0
  2828 ;;		On exit  : 0/0
  2829 ;;		Unchanged: 0/0
  2830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2831 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2832 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2834 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2835 ;;Total ram usage:        2 bytes
  2836 ;; Hardware stack levels used: 1
  2837 ;; This function calls:
  2838 ;;		Nothing
  2839 ;; This function is called by:
  2840 ;;		_writeOpModeRegister
  2841 ;;		_LoRaSetFrequency
  2842 ;;		_LoRaOptimalLoad
  2843 ;;		_LoRaMode_RXActive
  2844 ;;		_LoRaTXData
  2845 ;;		_LoRaClearIRQFlags
  2846 ;; This function uses a non-reentrant model
  2847 ;;
  2848                           
  2849                           	psect	text14
  2850  001B90                     __ptext14:
  2851                           	callstack 0
  2852  001B90                     _SPI2WriteByte:
  2853                           	callstack 27
  2854                           
  2855                           ;incstack = 0
  2856                           ;SPI2WriteByte@address stored from wreg
  2857  001B90  6E02               	movwf	SPI2WriteByte@address^0,c
  2858  001B92                     
  2859                           ;LoRa.c: 105: SSP2IF=0;
  2860  001B92  9EA4               	bcf	4004,7,c	;volatile
  2861                           
  2862                           ;LoRa.c: 106: LATDbits.LATD3=0;
  2863  001B94  968C               	bcf	140,3,c	;volatile
  2864  001B96                     
  2865                           ;LoRa.c: 107: _delay((unsigned long)((5)*(16000000/4000000.0)));
  2866  001B96  0E06               	movlw	6
  2867  001B98                     u877:
  2868  001B98  2EE8               	decfsz	wreg,f,c
  2869  001B9A  D7FE               	bra	u877
  2870  001B9C  D000               	nop2	
  2871  001B9E                     
  2872                           ;LoRa.c: 108: address = address|0x80;
  2873  001B9E  5002               	movf	SPI2WriteByte@address^0,w,c
  2874  001BA0  0980               	iorlw	128
  2875  001BA2  6E02               	movwf	SPI2WriteByte@address^0,c
  2876  001BA4                     
  2877                           ;LoRa.c: 109: SSP2BUF=address;
  2878  001BA4  C002  FF6F         	movff	SPI2WriteByte@address,3951	;volatile
  2879  001BA8                     l142:
  2880  001BA8  AEA4               	btfss	4004,7,c	;volatile
  2881  001BAA  EFD9  F00D         	goto	u411
  2882  001BAE  EFDB  F00D         	goto	u410
  2883  001BB2                     u411:
  2884  001BB2  EFD4  F00D         	goto	l142
  2885  001BB6                     u410:
  2886  001BB6                     
  2887                           ;LoRa.c: 112: };LoRa.c: 113: SSP2IF=0;
  2888  001BB6  9EA4               	bcf	4004,7,c	;volatile
  2889  001BB8                     
  2890                           ;LoRa.c: 114: _delay((unsigned long)((5)*(16000000/4000000.0)));
  2891  001BB8  0E06               	movlw	6
  2892  001BBA                     u887:
  2893  001BBA  2EE8               	decfsz	wreg,f,c
  2894  001BBC  D7FE               	bra	u887
  2895  001BBE  D000               	nop2	
  2896  001BC0                     
  2897                           ;LoRa.c: 115: SSP2BUF=data;
  2898  001BC0  C001  FF6F         	movff	SPI2WriteByte@data,3951	;volatile
  2899  001BC4                     l145:
  2900  001BC4  AEA4               	btfss	4004,7,c	;volatile
  2901  001BC6  EFE7  F00D         	goto	u421
  2902  001BCA  EFE9  F00D         	goto	u420
  2903  001BCE                     u421:
  2904  001BCE  EFE2  F00D         	goto	l145
  2905  001BD2                     u420:
  2906  001BD2                     
  2907                           ;LoRa.c: 118: };LoRa.c: 119: _delay((unsigned long)((5)*(16000000/4000000.0)));
  2908  001BD2  0E06               	movlw	6
  2909  001BD4                     u897:
  2910  001BD4  2EE8               	decfsz	wreg,f,c
  2911  001BD6  D7FE               	bra	u897
  2912  001BD8  D000               	nop2	
  2913  001BDA                     
  2914                           ;LoRa.c: 120: LATDbits.LATD3=1;
  2915  001BDA  868C               	bsf	140,3,c	;volatile
  2916  001BDC                     
  2917                           ;LoRa.c: 121: SSP2IF=0;
  2918  001BDC  9EA4               	bcf	4004,7,c	;volatile
  2919  001BDE  506F               	movf	111,w,c	;volatile
  2920  001BE0  0012               	return		;funcret
  2921  001BE2                     __end_of_SPI2WriteByte:
  2922                           	callstack 0
  2923                           
  2924 ;; *************** function _readOpModeRegister *****************
  2925 ;; Defined at:
  2926 ;;		line 84 in file "LoRa.c"
  2927 ;; Parameters:    Size  Location     Type
  2928 ;;		None
  2929 ;; Auto vars:     Size  Location     Type
  2930 ;;		None
  2931 ;; Return value:  Size  Location     Type
  2932 ;;                  1    wreg      unsigned char 
  2933 ;; Registers used:
  2934 ;;		wreg, status,2, cstack
  2935 ;; Tracked objects:
  2936 ;;		On entry : 0/0
  2937 ;;		On exit  : 0/0
  2938 ;;		Unchanged: 0/0
  2939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2944 ;;Total ram usage:        0 bytes
  2945 ;; Hardware stack levels used: 1
  2946 ;; Hardware stack levels required when called: 1
  2947 ;; This function calls:
  2948 ;;		_SPI2ReadByte
  2949 ;; This function is called by:
  2950 ;;		_setLoRaMode
  2951 ;;		_LoRaStandbyMode
  2952 ;;		_LoRaSleepMode
  2953 ;;		_LoRaFreqSynthRXMode
  2954 ;;		_LoRaFreqSynthTXMode
  2955 ;;		_LoRaTXMode
  2956 ;;		_LoRaRXContinuousMode
  2957 ;; This function uses a non-reentrant model
  2958 ;;
  2959                           
  2960                           	psect	text15
  2961  001C9C                     __ptext15:
  2962                           	callstack 0
  2963  001C9C                     _readOpModeRegister:
  2964                           	callstack 27
  2965  001C9C                     
  2966                           ;LoRa.c: 85: return SPI2ReadByte(0x01);
  2967  001C9C  0E01               	movlw	1
  2968  001C9E  ECF1  F00D         	call	_SPI2ReadByte
  2969  001CA2  0012               	return		;funcret
  2970  001CA4                     __end_of_readOpModeRegister:
  2971                           	callstack 0
  2972                           
  2973 ;; *************** function _SPI2ReadByte *****************
  2974 ;; Defined at:
  2975 ;;		line 132 in file "LoRa.c"
  2976 ;; Parameters:    Size  Location     Type
  2977 ;;  address         1    wreg     unsigned char 
  2978 ;; Auto vars:     Size  Location     Type
  2979 ;;  address         1    0[COMRAM] unsigned char 
  2980 ;;  dataByte        1    1[COMRAM] unsigned char 
  2981 ;; Return value:  Size  Location     Type
  2982 ;;                  1    wreg      unsigned char 
  2983 ;; Registers used:
  2984 ;;		wreg, status,2
  2985 ;; Tracked objects:
  2986 ;;		On entry : 0/0
  2987 ;;		On exit  : 0/0
  2988 ;;		Unchanged: 0/0
  2989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2991 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2993 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2994 ;;Total ram usage:        2 bytes
  2995 ;; Hardware stack levels used: 1
  2996 ;; This function calls:
  2997 ;;		Nothing
  2998 ;; This function is called by:
  2999 ;;		_readOpModeRegister
  3000 ;;		_LoRaGetVersion
  3001 ;;		_LoRaGetFrequency
  3002 ;;		_LoRaGetIRQFlags
  3003 ;;		_LoRaDumpRegisters
  3004 ;; This function uses a non-reentrant model
  3005 ;;
  3006                           
  3007                           	psect	text16
  3008  001BE2                     __ptext16:
  3009                           	callstack 0
  3010  001BE2                     _SPI2ReadByte:
  3011                           	callstack 27
  3012                           
  3013                           ;incstack = 0
  3014                           ;SPI2ReadByte@address stored from wreg
  3015  001BE2  6E01               	movwf	SPI2ReadByte@address^0,c
  3016  001BE4                     
  3017                           ;LoRa.c: 133: SSP2IF=0;
  3018  001BE4  9EA4               	bcf	4004,7,c	;volatile
  3019                           
  3020                           ;LoRa.c: 134: LATDbits.LATD3=0;
  3021  001BE6  968C               	bcf	140,3,c	;volatile
  3022  001BE8                     
  3023                           ;LoRa.c: 135: SSP2BUF=address;
  3024  001BE8  C001  FF6F         	movff	SPI2ReadByte@address,3951	;volatile
  3025  001BEC                     l151:
  3026  001BEC  AEA4               	btfss	4004,7,c	;volatile
  3027  001BEE  EFFB  F00D         	goto	u11
  3028  001BF2  EFFD  F00D         	goto	u10
  3029  001BF6                     u11:
  3030  001BF6  EFF6  F00D         	goto	l151
  3031  001BFA                     u10:
  3032  001BFA                     
  3033                           ;LoRa.c: 138: };LoRa.c: 139: SSP2IF=0;
  3034  001BFA  9EA4               	bcf	4004,7,c	;volatile
  3035  001BFC                     
  3036                           ;LoRa.c: 140: SSP2BUF=0;
  3037  001BFC  0E00               	movlw	0
  3038  001BFE  6E6F               	movwf	111,c	;volatile
  3039  001C00                     l154:
  3040  001C00  AEA4               	btfss	4004,7,c	;volatile
  3041  001C02  EF05  F00E         	goto	u21
  3042  001C06  EF07  F00E         	goto	u20
  3043  001C0A                     u21:
  3044  001C0A  EF00  F00E         	goto	l154
  3045  001C0E                     u20:
  3046  001C0E                     
  3047                           ;LoRa.c: 143: };LoRa.c: 144: SSP2IF=0;
  3048  001C0E  9EA4               	bcf	4004,7,c	;volatile
  3049                           
  3050                           ;LoRa.c: 146: LATDbits.LATD3=1;
  3051  001C10  868C               	bsf	140,3,c	;volatile
  3052                           
  3053                           ;LoRa.c: 147: uint8_t dataByte = SSP2BUF;
  3054  001C12  CF6F F002          	movff	3951,SPI2ReadByte@dataByte	;volatile
  3055                           
  3056                           ;LoRa.c: 148: return dataByte;
  3057  001C16  5002               	movf	SPI2ReadByte@dataByte^0,w,c
  3058  001C18  0012               	return		;funcret
  3059  001C1A                     __end_of_SPI2ReadByte:
  3060                           	callstack 0
  3061                           
  3062 ;; *************** function _LoRaReset *****************
  3063 ;; Defined at:
  3064 ;;		line 68 in file "LoRa.c"
  3065 ;; Parameters:    Size  Location     Type
  3066 ;;		None
  3067 ;; Auto vars:     Size  Location     Type
  3068 ;;		None
  3069 ;; Return value:  Size  Location     Type
  3070 ;;                  1    wreg      void 
  3071 ;; Registers used:
  3072 ;;		wreg
  3073 ;; Tracked objects:
  3074 ;;		On entry : 0/0
  3075 ;;		On exit  : 0/0
  3076 ;;		Unchanged: 0/0
  3077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3080 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3081 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3082 ;;Total ram usage:        1 bytes
  3083 ;; Hardware stack levels used: 1
  3084 ;; This function calls:
  3085 ;;		Nothing
  3086 ;; This function is called by:
  3087 ;;		_main
  3088 ;; This function uses a non-reentrant model
  3089 ;;
  3090                           
  3091                           	psect	text17
  3092  001C1A                     __ptext17:
  3093                           	callstack 0
  3094  001C1A                     _LoRaReset:
  3095                           	callstack 30
  3096  001C1A                     
  3097                           ;LoRa.c: 70: TRISAbits.RA2=0;
  3098  001C1A  9492               	bcf	146,2,c	;volatile
  3099                           
  3100                           ;LoRa.c: 71: LATAbits.LA2=0;
  3101  001C1C  9489               	bcf	137,2,c	;volatile
  3102  001C1E                     
  3103                           ;LoRa.c: 72: _delay((unsigned long)((1)*(16000000/4000.0)));
  3104  001C1E  0E06               	movlw	6
  3105  001C20  6E01               	movwf	??_LoRaReset^0,c
  3106  001C22  0E30               	movlw	48
  3107  001C24                     u907:
  3108  001C24  2EE8               	decfsz	wreg,f,c
  3109  001C26  D7FE               	bra	u907
  3110  001C28  2E01               	decfsz	??_LoRaReset^0,f,c
  3111  001C2A  D7FC               	bra	u907
  3112  001C2C  D000               	nop2	
  3113  001C2E                     
  3114                           ;LoRa.c: 73: TRISAbits.RA2=1;
  3115  001C2E  8492               	bsf	146,2,c	;volatile
  3116                           
  3117                           ;LoRa.c: 74: _delay((unsigned long)((5)*(16000000/4000.0)));
  3118  001C30  0E1A               	movlw	26
  3119  001C32  6E01               	movwf	??_LoRaReset^0,c
  3120  001C34  0EF8               	movlw	248
  3121  001C36                     u917:
  3122  001C36  2EE8               	decfsz	wreg,f,c
  3123  001C38  D7FE               	bra	u917
  3124  001C3A  2E01               	decfsz	??_LoRaReset^0,f,c
  3125  001C3C  D7FC               	bra	u917
  3126  001C3E  D000               	nop2	
  3127  001C40  0012               	return		;funcret
  3128  001C42                     __end_of_LoRaReset:
  3129                           	callstack 0
  3130                           
  3131                           	psect	rparam
  3132  0000                     
  3133                           	psect	idloc
  3134                           
  3135                           ;Config register IDLOC0 @ 0x200000
  3136                           ;	unspecified, using default values
  3137  200000                     	org	2097152
  3138  200000  FF                 	db	255
  3139                           
  3140                           ;Config register IDLOC1 @ 0x200001
  3141                           ;	unspecified, using default values
  3142  200001                     	org	2097153
  3143  200001  FF                 	db	255
  3144                           
  3145                           ;Config register IDLOC2 @ 0x200002
  3146                           ;	unspecified, using default values
  3147  200002                     	org	2097154
  3148  200002  FF                 	db	255
  3149                           
  3150                           ;Config register IDLOC3 @ 0x200003
  3151                           ;	unspecified, using default values
  3152  200003                     	org	2097155
  3153  200003  FF                 	db	255
  3154                           
  3155                           ;Config register IDLOC4 @ 0x200004
  3156                           ;	unspecified, using default values
  3157  200004                     	org	2097156
  3158  200004  FF                 	db	255
  3159                           
  3160                           ;Config register IDLOC5 @ 0x200005
  3161                           ;	unspecified, using default values
  3162  200005                     	org	2097157
  3163  200005  FF                 	db	255
  3164                           
  3165                           ;Config register IDLOC6 @ 0x200006
  3166                           ;	unspecified, using default values
  3167  200006                     	org	2097158
  3168  200006  FF                 	db	255
  3169                           
  3170                           ;Config register IDLOC7 @ 0x200007
  3171                           ;	unspecified, using default values
  3172  200007                     	org	2097159
  3173  200007  FF                 	db	255
  3174                           
  3175                           	psect	config
  3176                           
  3177                           ; Padding undefined space
  3178  300000                     	org	3145728
  3179  300000  FF                 	db	255
  3180                           
  3181                           ;Config register CONFIG1H @ 0x300001
  3182                           ;	Oscillator Selection bits
  3183                           ;	FOSC = INTIO67, Internal oscillator block
  3184                           ;	4X PLL Enable
  3185                           ;	PLLCFG = OFF, Oscillator used directly
  3186                           ;	Primary clock enable bit
  3187                           ;	PRICLKEN = ON, Primary clock is always enabled
  3188                           ;	Fail-Safe Clock Monitor Enable bit
  3189                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3190                           ;	Internal/External Oscillator Switchover bit
  3191                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3192  300001                     	org	3145729
  3193  300001  28                 	db	40
  3194                           
  3195                           ;Config register CONFIG2L @ 0x300002
  3196                           ;	Power-up Timer Enable bit
  3197                           ;	PWRTEN = ON, Power up timer enabled
  3198                           ;	Brown-out Reset Enable bits
  3199                           ;	BOREN = NOSLP, Brown-out Reset enabled in hardware only and disabled in Sleep mode (SB
      +                          OREN is disabled)
  3200                           ;	Brown Out Reset Voltage bits
  3201                           ;	BORV = 190, VBOR set to 1.90 V nominal
  3202  300002                     	org	3145730
  3203  300002  1C                 	db	28
  3204                           
  3205                           ;Config register CONFIG2H @ 0x300003
  3206                           ;	Watchdog Timer Enable bits
  3207                           ;	WDTEN = ON, WDT is always enabled. SWDTEN bit has no effect
  3208                           ;	Watchdog Timer Postscale Select bits
  3209                           ;	WDTPS = 512, 1:512
  3210  300003                     	org	3145731
  3211  300003  27                 	db	39
  3212                           
  3213                           ; Padding undefined space
  3214  300004                     	org	3145732
  3215  300004  FF                 	db	255
  3216                           
  3217                           ;Config register CONFIG3H @ 0x300005
  3218                           ;	CCP2 MUX bit
  3219                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  3220                           ;	PORTB A/D Enable bit
  3221                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
  3222                           ;	P3A/CCP3 Mux bit
  3223                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  3224                           ;	HFINTOSC Fast Start-up
  3225                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  3226                           ;	Timer3 Clock input mux bit
  3227                           ;	T3CMX = PORTC0, T3CKI is on RC0
  3228                           ;	ECCP2 B output mux bit
  3229                           ;	P2BMX = PORTD2, P2B is on RD2
  3230                           ;	MCLR Pin Enable bit
  3231                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  3232  300005                     	org	3145733
  3233  300005  BD                 	db	189
  3234                           
  3235                           ;Config register CONFIG4L @ 0x300006
  3236                           ;	Stack Full/Underflow Reset Enable bit
  3237                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3238                           ;	Single-Supply ICSP Enable bit
  3239                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  3240                           ;	Extended Instruction Set Enable bit
  3241                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3242                           ;	Background Debug
  3243                           ;	DEBUG = 0x1, unprogrammed default
  3244  300006                     	org	3145734
  3245  300006  85                 	db	133
  3246                           
  3247                           ; Padding undefined space
  3248  300007                     	org	3145735
  3249  300007  FF                 	db	255
  3250                           
  3251                           ;Config register CONFIG5L @ 0x300008
  3252                           ;	Code Protection Block 0
  3253                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  3254                           ;	Code Protection Block 1
  3255                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  3256                           ;	Code Protection Block 2
  3257                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  3258                           ;	Code Protection Block 3
  3259                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  3260  300008                     	org	3145736
  3261  300008  0F                 	db	15
  3262                           
  3263                           ;Config register CONFIG5H @ 0x300009
  3264                           ;	Boot Block Code Protection bit
  3265                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  3266                           ;	Data EEPROM Code Protection bit
  3267                           ;	CPD = OFF, Data EEPROM not code-protected
  3268  300009                     	org	3145737
  3269  300009  C0                 	db	192
  3270                           
  3271                           ;Config register CONFIG6L @ 0x30000A
  3272                           ;	Write Protection Block 0
  3273                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  3274                           ;	Write Protection Block 1
  3275                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  3276                           ;	Write Protection Block 2
  3277                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  3278                           ;	Write Protection Block 3
  3279                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  3280  30000A                     	org	3145738
  3281  30000A  0F                 	db	15
  3282                           
  3283                           ;Config register CONFIG6H @ 0x30000B
  3284                           ;	Configuration Register Write Protection bit
  3285                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  3286                           ;	Boot Block Write Protection bit
  3287                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  3288                           ;	Data EEPROM Write Protection bit
  3289                           ;	WRTD = OFF, Data EEPROM not write-protected
  3290  30000B                     	org	3145739
  3291  30000B  E0                 	db	224
  3292                           
  3293                           ;Config register CONFIG7L @ 0x30000C
  3294                           ;	Table Read Protection Block 0
  3295                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  3296                           ;	Table Read Protection Block 1
  3297                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  3298                           ;	Table Read Protection Block 2
  3299                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  3300                           ;	Table Read Protection Block 3
  3301                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  3302  30000C                     	org	3145740
  3303  30000C  0F                 	db	15
  3304                           
  3305                           ;Config register CONFIG7H @ 0x30000D
  3306                           ;	Boot Block Table Read Protection bit
  3307                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3308  30000D                     	org	3145741
  3309  30000D  40                 	db	64
  3310                           tosu	equ	0xFFF
  3311                           tosh	equ	0xFFE
  3312                           tosl	equ	0xFFD
  3313                           stkptr	equ	0xFFC
  3314                           pclatu	equ	0xFFB
  3315                           pclath	equ	0xFFA
  3316                           pcl	equ	0xFF9
  3317                           tblptru	equ	0xFF8
  3318                           tblptrh	equ	0xFF7
  3319                           tblptrl	equ	0xFF6
  3320                           tablat	equ	0xFF5
  3321                           prodh	equ	0xFF4
  3322                           prodl	equ	0xFF3
  3323                           indf0	equ	0xFEF
  3324                           postinc0	equ	0xFEE
  3325                           postdec0	equ	0xFED
  3326                           preinc0	equ	0xFEC
  3327                           plusw0	equ	0xFEB
  3328                           fsr0h	equ	0xFEA
  3329                           fsr0l	equ	0xFE9
  3330                           wreg	equ	0xFE8
  3331                           indf1	equ	0xFE7
  3332                           postinc1	equ	0xFE6
  3333                           postdec1	equ	0xFE5
  3334                           preinc1	equ	0xFE4
  3335                           plusw1	equ	0xFE3
  3336                           fsr1h	equ	0xFE2
  3337                           fsr1l	equ	0xFE1
  3338                           bsr	equ	0xFE0
  3339                           indf2	equ	0xFDF
  3340                           postinc2	equ	0xFDE
  3341                           postdec2	equ	0xFDD
  3342                           preinc2	equ	0xFDC
  3343                           plusw2	equ	0xFDB
  3344                           fsr2h	equ	0xFDA
  3345                           fsr2l	equ	0xFD9
  3346                           status	equ	0xFD8

Data Sizes:
    Strings     141
    Constant    8
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     54      54
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 36
		 -> STR_7(CODE[12]), STR_6(CODE[10]), STR_5(CODE[16]), STR_4(CODE[21]), 
		 -> STR_3(CODE[36]), STR_2(CODE[16]), STR_1(CODE[13]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_LoRaStart
    _LoRaStart->_LoRaSetFrequency
    _printf->___lwdiv
    _LoRaSetFrequency->___fltol
    ___fltol->___flmul
    _LoRaOptimalLoad->_LoRaSleepMode
    _LoRaOptimalLoad->_LoRaStandbyMode
    _LoRaOptimalLoad->_setLoRaMode
    _setLoRaMode->_writeOpModeRegister
    _LoRaStandbyMode->_writeOpModeRegister
    _LoRaSleepMode->_writeOpModeRegister
    _writeOpModeRegister->_SPI2WriteByte
    _readOpModeRegister->_SPI2ReadByte

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   29149
                                             52 COMRAM     2     2      0
                          _LoRaReset
                      _LoRaSleepMode
                          _LoRaStart
                           _shutdown
 ---------------------------------------------------------------------------------
 (1) _shutdown                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LoRaStart                                            6     1      5   25487
                                             46 COMRAM     6     1      5
                    _LoRaOptimalLoad
                   _LoRaSetFrequency
                             _printf
                        _setLoRaMode
 ---------------------------------------------------------------------------------
 (2) _printf                                              23    17      6    1187
                                              7 COMRAM    13     7      6
                            ___lwdiv
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _LoRaSetFrequency                                    11     7      4    5847
                                             35 COMRAM    11     7      4
                      _SPI2WriteByte
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     305
                                             25 COMRAM    10     6      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    1744
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (2) _LoRaOptimalLoad                                      2     2      0   14595
                                              4 COMRAM     2     2      0
                      _LoRaSleepMode
                    _LoRaStandbyMode
                      _SPI2WriteByte
                        _setLoRaMode
 ---------------------------------------------------------------------------------
 (2) _setLoRaMode                                          1     1      0    3662
                                              3 COMRAM     1     1      0
                 _readOpModeRegister
                _writeOpModeRegister
 ---------------------------------------------------------------------------------
 (3) _LoRaStandbyMode                                      1     1      0    3685
                                              3 COMRAM     1     1      0
                 _readOpModeRegister
                _writeOpModeRegister
 ---------------------------------------------------------------------------------
 (3) _LoRaSleepMode                                        1     1      0    3662
                                              3 COMRAM     1     1      0
                 _readOpModeRegister
                _writeOpModeRegister
 ---------------------------------------------------------------------------------
 (3) _writeOpModeRegister                                  1     1      0    3586
                                              2 COMRAM     1     1      0
                      _SPI2WriteByte
 ---------------------------------------------------------------------------------
 (4) _SPI2WriteByte                                        3     2      1    3564
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (3) _readOpModeRegister                                   0     0      0      30
                       _SPI2ReadByte
 ---------------------------------------------------------------------------------
 (4) _SPI2ReadByte                                         2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LoRaReset                                            1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LoRaReset
   _LoRaSleepMode
     _readOpModeRegister
       _SPI2ReadByte
     _writeOpModeRegister
       _SPI2WriteByte
   _LoRaStart
     _LoRaOptimalLoad
       _LoRaSleepMode
       _LoRaStandbyMode
         _readOpModeRegister
         _writeOpModeRegister
       _SPI2WriteByte
       _setLoRaMode
         _readOpModeRegister
         _writeOpModeRegister
     _LoRaSetFrequency
       _SPI2WriteByte
       ___flmul
       ___fltol
         ___flmul (ARG)
     _printf
       ___lwdiv
       _putch
     _setLoRaMode
   _shutdown

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     36      36       1       56.8%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
ABS                  0      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BIGRAM             F37      0       0      37        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Feb 11 22:01:55 2022

                          l63 19B4                            l69 1968                            u10 1BFA  
                          u11 1BF6                            u20 1C0E                            u21 1C0A  
                         l201 1646                           l121 1AA6                           l130 1C6E  
                         l133 1CA2                           l142 1BA8                           l127 1C40  
                         l151 1BEC                           l223 16FE                           l144 1BB6  
                         l136 1C90                           l153 1BFA                           l145 1BC4  
                         l154 1C00                           l156 1C0E                           l148 1BE0  
                         l157 1C18                           l229 1780                           l166 1C5A  
                         l184 1B8E                           l169 1C82                           l521 1886  
                         l711 1B12                           l718 1B1A                           l841 1352  
                         l834 115C                           l851 1482                           l843 13CA  
                         l844 13B8                           l838 14C0                           l980 1BE4  
                         l982 1BE8                           l894 1CA4                           l984 1BFC  
                         u410 1BB6                           u411 1BB2                           u420 1BD2  
                         u500 117C                           u421 1BCE                           u501 1178  
                         u510 12F6                           u430 10B2                           u431 10AE  
                         u600 146A                           u520 1350                           u440 10C4  
                         u601 1466                           u521 134C                           u441 10C0  
                         u610 14A4                           u530 1370                           u450 10D4  
                         u611 14A0                           u531 136C                           u515 12EC  
                         u451 10D0                           u540 1382                           u460 1114  
                         u620 1798                           u700 1AE0                           u541 137E  
                         u461 1110                           u621 1794                           u701 1ADC  
                         u550 13B0                           u470 1126                           u630 17CC  
                         u710 1AFC                           u551 13AC                           u471 1122  
                         u711 1AF8                           u560 13C6                           u480 1136  
                         u640 17FA                           u720 1666                           u561 13C2  
                         u481 1132                           u641 17F6                           u721 1662  
                         u570 13DA                           u490 116C                           u650 180E  
                         u730 16E6                           u571 13D6                           u491 1168  
                         u651 180A                           u635 17C2                           u731 16E2  
                         u580 13F4                           u660 1836                           u740 16FE  
                         u581 13F0                           u661 1832                           u741 16FA  
                         u590 143C                           u670 1856                           u750 175E  
                         u591 1438                           u671 1852                           u751 175A  
                         u807 19A8                           u680 1866                           u760 1780  
                         u681 1862                           u761 177C                           u817 19C2  
                         u690 1AC2                           u907 1C24                           u691 1ABE  
                         u827 19DC                           u917 1C36                           u837 19F6  
                         u847 1A5A                           u857 1A6C                           u867 14D6  
                         u877 1B98                           u797 1996                           u887 1BBA  
                         u897 1BD4                           wreg 000FE8                  ___flmul@aexp 0012  
                ___flmul@bexp 0013                  ___flmul@sign 000D                  ___flmul@temp 0018  
                ___flmul@prod 0014                  ___fltol@exp1 0023                          l1006 1C9C  
                        l1360 1C1E                          l1600 10FA                          l1416 1888  
                        l1362 1C2E                          l1610 1126                          l1602 1100  
                        l1700 1486                          l1620 117C                          l1612 1136  
                        l1604 1106                          l1358 1C1A                          l1550 1BB8  
                        l1542 1B92                          l1710 14B0                          l1702 1496  
                        l1630 11BC                          l1614 1146                          l1606 1114  
                        l1560 1BDE                          l1552 1BC0                          l1544 1B96  
                        l1704 14A4                          l1640 1206                          l1632 11C8  
                        l1624 1190                          l1616 114C                          l1608 1116  
                        l1720 17AC                          l1554 1BD2                          l1546 1B9E  
                        l1562 1C86                          l1570 1C5C                          l1706 14A6  
                        l1650 1258                          l1642 1212                          l1634 11E0  
                        l1626 119C                          l1618 116C                          l1730 17FA  
                        l1722 17D6                          l1714 1782                          l1810 1706  
                        l1802 16BC                          l1556 1BDA                          l1548 1BA4  
                        l1564 1C70                          l1580 1C4E                          l1572 1C62  
                        l1820 14C4                          l1708 14AC                          l1660 12D6  
                        l1652 1268                          l1644 1222                          l1636 11EC  
                        l1628 11A6                          l1740 1826                          l1724 17D8  
                        l1716 1798                          l1900 1B68                          l1812 1734  
                        l1558 1BDC                          l1566 1C76                          l1582 1C54  
                        l1574 1C68                          l1830 14FC                          l1822 14D0  
                        l1670 1350                          l1662 130C                          l1654 1284  
                        l1646 122E                          l1638 11F8                          l1590 10B4  
                        l1750 1856                          l1726 17E8                          l1902 1B6C  
                        l1814 1746                          l1806 16EA                          l1910 1A12  
                        l1568 1C7C                          l1576 1C42                          l1840 152E  
                        l1832 1506                          l1824 14DE                          l1680 13B0  
                        l1672 1362                          l1664 131A                          l1656 1290  
                        l1648 123E                          l1592 10C4                          l1584 1098  
                        l1752 1866                          l1736 1812                          l1728 17EC  
                        l1904 1B70                          l1760 1AB0                          l1816 174C  
                        l1808 16EC                          l1920 1A28                          l1912 1A1E  
                        l1578 1C48                          l1850 1560                          l1842 1538  
                        l1834 1510                          l1826 14E8                          l1690 141E  
                        l1674 1370                          l1666 1338                          l1658 12AC  
                        l1594 10D4                          l1586 10A4                          l1754 1876  
                        l1746 183A                          l1738 181C                          l1906 1B7A  
                        l1770 1AE6                          l1762 1AC2                          l1818 175E  
                        l1930 1A32                          l1922 1A2A                          l1914 1A22  
                        l1860 1592                          l1852 156A                          l1844 1542  
                        l1836 151A                          l1828 14F2                          l1684 13DA  
                        l1692 1422                          l1676 1374                          l1668 1342  
                        l1596 10E4                          l1588 10B2                          l1748 1846  
                        l1908 1B84                          l1772 1AFC                          l1764 1ACA  
                        l1780 1648                          l1940 1A3C                          l1932 1A34  
                        l1924 1A2C                          l1916 1A24                          l1870 15C4  
                        l1862 159C                          l1854 1574                          l1846 154C  
                        l1838 1524                          l1694 143C                          l1686 13E6  
                        l1678 1382                          l1598 10EA                          l1774 1B04  
                        l1766 1AD2                          l1758 1AA8                          l1790 1670  
                        l1782 1654                          l1950 1A62                          l1942 1A3E  
                        l1934 1A36                          l1926 1A2E                          l1918 1A26  
                        l1880 15F6                          l1872 15CE                          l1864 15A6  
                        l1856 157E                          l1848 1556                          l1696 1450  
                        l1688 13F4                          l1776 1B06                          l1768 1AE0  
                        l1792 16A0                          l1784 1666                          l1960 1A92  
                        l1952 1A66                          l1944 1A46                          l1936 1A38  
                        l1928 1A30                          l1890 1628                          l1882 1600  
                        l1874 15D8                          l1866 15B0                          l1858 1588  
                        l1698 146A                          l1778 1B0C                          l1794 16B0  
                        l1786 1670                          l1954 1A74                          l1946 1A48  
                        l1938 1A3A                          l1970 1974                          l1962 196A  
                        l1892 1632                          l1884 160A                          l1876 15E2  
                        l1868 15BA                          l1796 16B8                          l1956 1A80  
                        l1948 1A54                          l1980 19B0                          l1972 1978  
                        l1964 196E                          l1894 163C                          l1886 1614  
                        l1878 15EC                          l1958 1A86                          l1990 19EA  
                        l1982 19B6                          l1974 1990                          l1966 1970  
                        l1888 161E                          l1896 1B1C                          l1992 19EC  
                        l1984 19B8                          l1976 199E                          l1968 1972  
                        l1898 1B64                          l1994 1A04                          l1986 19D0  
                        l1978 19A2                          l1996 1A06                          l1988 19D2  
                        l1998 1A08                          STR_1 1073                          STR_2 1063  
                        STR_3 1009                          STR_4 102D                          STR_5 1053  
                        STR_6 108C                          STR_7 1080                          STR_8 1042  
                        _PMD0 000F3F                          _PMD1 000F3E                          _PMD2 000F3D  
     LoRaStandbyMode@regValue 0004                          _main 196A                          fsr2h 000FDA  
                        fsr2l 000FD9                          prodh 000FF4                          prodl 000FF3  
                        start 0000                  ___param_bank 000000                 ___fltol@sign1 0022  
                       ?_main 0001              _LoRaSetFrequency 1B1C               __end_of___flmul 14C2  
             __end_of___fltol 1888           SPI2ReadByte@address 0001               __end_of___lwdiv 1B1C  
                       _putch 1CA4                         tablat 000FF5                         status 000FD8  
             _LoRaOptimalLoad 14C2               __initialization 1C92                  __end_of_main 1A12  
                ?_setLoRaMode 0001         LoRaSleepMode@regValue 0004                        ??_main 0035  
             _LoRaStandbyMode 1C42                 __activetblptr 000002            _readOpModeRegister 1C9C  
          __size_of_LoRaReset 0028            __size_of_LoRaStart 0096                        ?_putch 0001  
        SPI2ReadByte@dataByte 0002           ?_readOpModeRegister 0001                        _SSP2IF 007D27  
__size_of_writeOpModeRegister 000E                     ??___flmul 0009                     ??___fltol 001E  
                   ??___lwdiv 0005         __end_of_SPI2WriteByte 1BE2          ??_readOpModeRegister 0003  
                      isa$std 000001                        _printf 1648             SPI2WriteByte@data 0001  
                __mediumconst 0000                        tblptrh 000FF7                        tblptrl 000FF6  
                      tblptru 000FF8              __end_of_shutdown 196A                        putch@c 0001  
     __end_of_LoRaOptimalLoad 1648                    __accesstop 0060       __end_of__initialization 1C92  
               ___rparam_used 000001                    ___fltol@f1 001A             __end_of_LoRaReset 1C42  
              __pcstackCOMRAM 0001             __end_of_LoRaStart 1AA8       __end_of_LoRaStandbyMode 1C5C  
               __end_of_putch 1CA6         __end_of_LoRaSleepMode 1C84                       ??_putch 0001  
    __end_of_LoRaSetFrequency 1B90                 ?_SPI2ReadByte 0001                       ?_printf 0008  
        __size_of_setLoRaMode 0014                       _SSP2BUF 000F6F              ?_LoRaOptimalLoad 0001  
                     __Hparam 0000                       __Lparam 0000                ??_SPI2ReadByte 0001  
            ?_LoRaStandbyMode 0001                       ___flmul 1098                       ___fltol 1782  
                   ?_shutdown 0001                       ___lwdiv 1AA8                  __psmallconst 1000  
                     __pcinit 1C92                       __ramtop 1000                       __ptext0 196A  
                     __ptext1 1888                       __ptext2 1A12                       __ptext3 1648  
                     __ptext4 1CA4                       __ptext5 1AA8                       __ptext6 1B1C  
                     __ptext7 1782                       __ptext8 1098                       __ptext9 14C2  
             __size_of_printf 013A           _writeOpModeRegister 1C84             __end_of_hexpowers 1009  
        end_of_initialization 1C92                 __Lmediumconst 0000          ?_writeOpModeRegister 0001  
                     printf@c 0014                       printf@f 0008                       postdec2 000FDD  
                     postinc2 000FDE                    ??_shutdown 0001                     _TRISAbits 000F92  
                   _TRISBbits 000F93                     _TRISCbits 000F94                     _TRISDbits 000F95  
                   _TRISEbits 000F96                   ___flmul@grs 000E         ??_writeOpModeRegister 0003  
     LoRaOptimalLoad@syncWord 0006                     _LoRaReset 1C1A                     _LoRaStart 1A12  
 __size_of_readOpModeRegister 0008                __end_of_printf 1782           start_initialization 1C92  
        __end_of_SPI2ReadByte 1C1A        __size_of_SPI2WriteByte 0052             ?_LoRaSetFrequency 0024  
          ??_LoRaSetFrequency 0028                    ?_LoRaReset 0001                    ?_LoRaStart 002F  
                    ??_printf 000E                     ___flmul@a 0005                     ___flmul@b 0001  
           LoRaStart@syncWord 0033              ___lwdiv@dividend 0001        __size_of_LoRaSleepMode 0014  
                    ?___flmul 0001                      ?___fltol 001A                      ?___lwdiv 0001  
               ??_setLoRaMode 0004           LoRaSetFrequency@mid 0029           LoRaSetFrequency@lsb 002A  
         LoRaSetFrequency@msb 0028                 _SPI2WriteByte 1B90             __size_of_shutdown 00E2  
LoRaSetFrequency@intermediate 002B                   __smallconst 1000                     _hexpowers 1001  
            ___lwdiv@quotient 0005                __size_of_putch 0002                      _LATAbits 000F89  
                    _LATBbits 000F8A                      _LATCbits 000F8B                      _LATDbits 000F8C  
                    _LATEbits 000F8D                      _PMD0bits 000F3F                      _PMD1bits 000F3E  
    __size_of_LoRaOptimalLoad 0186                   ??_LoRaReset 0001                ?_SPI2WriteByte 0001  
                 ??_LoRaStart 0034                    _ADCON0bits 000FC2         __size_of_SPI2ReadByte 0038  
                  printf@prec 0013      __size_of_LoRaStandbyMode 001A           __end_of_setLoRaMode 1C70  
         setLoRaMode@regValue 0004          SPI2WriteByte@address 0002                 _LoRaSleepMode 1C70  
                    __Hrparam 0000                      __Lrparam 0000                  _SPI2ReadByte 1BE2  
            __size_of___flmul 042A              __size_of___fltol 0106              __size_of___lwdiv 0074  
                  _ANSELAbits 000F38                    _ANSELBbits 000F39                    _ANSELCbits 000F3A  
                  _ANSELDbits 000F3B                    _ANSELEbits 000F3C               ___lwdiv@divisor 0003  
              ?_LoRaSleepMode 0001               ___lwdiv@counter 0007                      __ptext10 1C5C  
                    __ptext11 1C42                      __ptext12 1C70                      __ptext13 1C84  
                    __ptext14 1B90                      __ptext15 1C9C                      __ptext16 1BE2  
                    __ptext17 1C1A   __end_of_writeOpModeRegister 1C92                  _SSP2CON1bits 000F6C  
                 _OSCCON2bits 000FD2                 LoRaStart@freq 002F                 __size_of_main 00A8  
     LoRaSetFrequency@freqMHz 0024                      isa$xinst 000000               ??_SPI2WriteByte 0002  
  __end_of_readOpModeRegister 1CA4                      _shutdown 1888                     printf@idx 0010  
                 _setLoRaMode 1C5C                     printf@val 0011                  _SSP2STATbits 000F6D  
           ??_LoRaOptimalLoad 0005     __size_of_LoRaSetFrequency 0074                   _OSCTUNEbits 000F9B  
 writeOpModeRegister@regValue 0003             ??_LoRaStandbyMode 0004                  _VREFCON0bits 000F42  
                  _OSCCONbits 000FD3                      printf@ap 000E               ??_LoRaSleepMode 0004  
